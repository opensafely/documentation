{
  "backends": [
    {
      "name": "DatabricksBackend",
      "contracts": [
        "contracts/WIP_SimplePatientDemographics",
        "contracts/WIP_Prescriptions",
        "contracts/WIP_HospitalAdmissions"
      ]
    },
    {
      "name": "GraphnetBackend",
      "contracts": [
        "contracts/PatientDemographics",
        "contracts/WIP_ClinicalEvents",
        "contracts/WIP_PracticeRegistrations",
        "contracts/WIP_CovidTestResults",
        "contracts/WIP_HospitalizationsWithoutSystem",
        "contracts/WIP_PatientAddress"
      ]
    },
    {
      "name": "TPPBackend",
      "contracts": [
        "universal/Patients",
        "contracts/WIP_ClinicalEvents",
        "contracts/WIP_PracticeRegistrations",
        "contracts/WIP_CovidTestResults",
        "contracts/WIP_Hospitalizations",
        "contracts/WIP_PatientAddress"
      ]
    }
  ],
  "contracts": [
    {
      "name": "PatientDemographics",
      "hierarchy": [
        "contracts"
      ],
      "dotted_path": "databuilder.contracts.contracts.PatientDemographics",
      "docstring": [
        "Provides demographic information about patients."
      ],
      "columns": [
        {
          "name": "patient_id",
          "description": "Patient's pseudonymous identifier, for linkage. You should not normally output or operate on this column",
          "type": "PseudoPatientId",
          "constraints": [
            "Must have a value",
            "Must be unique"
          ]
        },
        {
          "name": "date_of_birth",
          "description": "Patient's year and month of birth, provided in format YYYY-MM-01.",
          "type": "Date",
          "constraints": [
            "Must have a value",
            "Must be the first day of a month"
          ]
        },
        {
          "name": "sex",
          "description": "Patient's sex.",
          "type": "Choice",
          "constraints": [
            "Must have a value"
          ]
        },
        {
          "name": "date_of_death",
          "description": "Patient's year and month of death, provided in format YYYY-MM-01.",
          "type": "Date",
          "constraints": [
            "Must be the first day of a month"
          ]
        }
      ],
      "contract_support": []
    },
    {
      "name": "WIP_ClinicalEvents",
      "hierarchy": [
        "contracts"
      ],
      "dotted_path": "databuilder.contracts.contracts.WIP_ClinicalEvents",
      "docstring": [
        "TODO."
      ],
      "columns": [
        {
          "name": "patient_id",
          "description": "",
          "type": "PseudoPatientId",
          "constraints": []
        },
        {
          "name": "code",
          "description": "",
          "type": "Code",
          "constraints": []
        },
        {
          "name": "system",
          "description": "",
          "type": "String",
          "constraints": []
        },
        {
          "name": "date",
          "description": "",
          "type": "Date",
          "constraints": []
        },
        {
          "name": "numeric_value",
          "description": "",
          "type": "Float",
          "constraints": []
        }
      ],
      "contract_support": []
    },
    {
      "name": "WIP_CovidTestResults",
      "hierarchy": [
        "contracts"
      ],
      "dotted_path": "databuilder.contracts.contracts.WIP_CovidTestResults",
      "docstring": [
        "TODO."
      ],
      "columns": [
        {
          "name": "patient_id",
          "description": "",
          "type": "PseudoPatientId",
          "constraints": []
        },
        {
          "name": "date",
          "description": "",
          "type": "Date",
          "constraints": []
        },
        {
          "name": "positive_result",
          "description": "",
          "type": "Boolean",
          "constraints": []
        }
      ],
      "contract_support": []
    },
    {
      "name": "WIP_HospitalAdmissions",
      "hierarchy": [
        "contracts"
      ],
      "dotted_path": "databuilder.contracts.contracts.WIP_HospitalAdmissions",
      "docstring": [
        "TODO."
      ],
      "columns": [
        {
          "name": "patient_id",
          "description": "",
          "type": "PseudoPatientId",
          "constraints": []
        },
        {
          "name": "admission_date",
          "description": "",
          "type": "Date",
          "constraints": []
        },
        {
          "name": "primary_diagnosis",
          "description": "",
          "type": "Code",
          "constraints": []
        },
        {
          "name": "admission_method",
          "description": "",
          "type": "Integer",
          "constraints": []
        },
        {
          "name": "episode_is_finished",
          "description": "",
          "type": "Boolean",
          "constraints": []
        },
        {
          "name": "spell_id",
          "description": "",
          "type": "Integer",
          "constraints": []
        }
      ],
      "contract_support": []
    },
    {
      "name": "WIP_Hospitalizations",
      "hierarchy": [
        "contracts"
      ],
      "dotted_path": "databuilder.contracts.contracts.WIP_Hospitalizations",
      "docstring": [
        "TODO."
      ],
      "columns": [
        {
          "name": "patient_id",
          "description": "",
          "type": "PseudoPatientId",
          "constraints": []
        },
        {
          "name": "date",
          "description": "",
          "type": "Date",
          "constraints": []
        },
        {
          "name": "code",
          "description": "",
          "type": "Code",
          "constraints": []
        },
        {
          "name": "system",
          "description": "",
          "type": "String",
          "constraints": []
        }
      ],
      "contract_support": []
    },
    {
      "name": "WIP_HospitalizationsWithoutSystem",
      "hierarchy": [
        "contracts"
      ],
      "dotted_path": "databuilder.contracts.contracts.WIP_HospitalizationsWithoutSystem",
      "docstring": [
        "TODO."
      ],
      "columns": [
        {
          "name": "patient_id",
          "description": "",
          "type": "PseudoPatientId",
          "constraints": []
        },
        {
          "name": "code",
          "description": "",
          "type": "Code",
          "constraints": []
        }
      ],
      "contract_support": []
    },
    {
      "name": "WIP_PatientAddress",
      "hierarchy": [
        "contracts"
      ],
      "dotted_path": "databuilder.contracts.contracts.WIP_PatientAddress",
      "docstring": [
        "TODO."
      ],
      "columns": [
        {
          "name": "patient_id",
          "description": "",
          "type": "PseudoPatientId",
          "constraints": []
        },
        {
          "name": "patientaddress_id",
          "description": "",
          "type": "Integer",
          "constraints": []
        },
        {
          "name": "date_start",
          "description": "",
          "type": "Date",
          "constraints": []
        },
        {
          "name": "date_end",
          "description": "",
          "type": "Date",
          "constraints": []
        },
        {
          "name": "index_of_multiple_deprivation_rounded",
          "description": "",
          "type": "Integer",
          "constraints": []
        },
        {
          "name": "has_postcode",
          "description": "",
          "type": "Boolean",
          "constraints": []
        }
      ],
      "contract_support": []
    },
    {
      "name": "WIP_PracticeRegistrations",
      "hierarchy": [
        "contracts"
      ],
      "dotted_path": "databuilder.contracts.contracts.WIP_PracticeRegistrations",
      "docstring": [
        "TODO."
      ],
      "columns": [
        {
          "name": "patient_id",
          "description": "",
          "type": "PseudoPatientId",
          "constraints": []
        },
        {
          "name": "pseudo_id",
          "description": "",
          "type": "Integer",
          "constraints": []
        },
        {
          "name": "nuts1_region_name",
          "description": "",
          "type": "String",
          "constraints": []
        },
        {
          "name": "date_start",
          "description": "",
          "type": "Date",
          "constraints": []
        },
        {
          "name": "date_end",
          "description": "",
          "type": "Date",
          "constraints": []
        }
      ],
      "contract_support": []
    },
    {
      "name": "WIP_Prescriptions",
      "hierarchy": [
        "contracts"
      ],
      "dotted_path": "databuilder.contracts.contracts.WIP_Prescriptions",
      "docstring": [
        "TODO."
      ],
      "columns": [
        {
          "name": "patient_id",
          "description": "",
          "type": "PseudoPatientId",
          "constraints": []
        },
        {
          "name": "prescribed_dmd_code",
          "description": "",
          "type": "Code",
          "constraints": []
        },
        {
          "name": "processing_date",
          "description": "",
          "type": "Date",
          "constraints": []
        }
      ],
      "contract_support": []
    },
    {
      "name": "WIP_SimplePatientDemographics",
      "hierarchy": [
        "contracts"
      ],
      "dotted_path": "databuilder.contracts.contracts.WIP_SimplePatientDemographics",
      "docstring": [
        "TODO."
      ],
      "columns": [
        {
          "name": "patient_id",
          "description": "",
          "type": "PseudoPatientId",
          "constraints": [
            "Must be unique"
          ]
        },
        {
          "name": "date_of_birth",
          "description": "",
          "type": "Date",
          "constraints": []
        }
      ],
      "contract_support": []
    },
    {
      "name": "Patients",
      "hierarchy": [
        "universal"
      ],
      "dotted_path": "databuilder.contracts.universal.Patients",
      "docstring": [],
      "columns": [
        {
          "name": "patient_id",
          "description": "Patient's pseudonymous identifier, for linkage.This will not normally be output, or operated on by researchers.",
          "type": "PseudoPatientId",
          "constraints": [
            "Must have a value",
            "Must be unique"
          ]
        },
        {
          "name": "date_of_birth",
          "description": "Patient's year and month of birth, provided in format YYYY-MM-01. The day will always be the first of the month.",
          "type": "Date",
          "constraints": [
            "Must be the first day of a month",
            "Must have a value"
          ]
        },
        {
          "name": "sex",
          "description": "Patient's sex as defined by the options: male, female, intersex, unknown.",
          "type": "Choice",
          "constraints": [
            "Must have a value"
          ]
        },
        {
          "name": "date_of_death",
          "description": "Patient's year and month of death, provided in format YYYY-MM-01. The day will always be the first of the month.",
          "type": "Date",
          "constraints": [
            "Must be the first day of a month"
          ]
        }
      ],
      "contract_support": []
    }
  ],
  "specs": [
    {
      "id": "1",
      "title": "Filtering an event frame",
      "sections": [
        {
          "id": "1.1",
          "title": "Including rows",
          "paragraphs": [
            {
              "id": "1.1.1",
              "title": "Take with column",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1",
                    "b1"
                  ],
                  [
                    "1",
                    "101",
                    "T"
                  ],
                  [
                    "1",
                    "102",
                    "T"
                  ],
                  [
                    "1",
                    "103",
                    ""
                  ],
                  [
                    "2",
                    "201",
                    "T"
                  ],
                  [
                    "2",
                    "202",
                    ""
                  ],
                  [
                    "2",
                    "203",
                    "F"
                  ],
                  [
                    "3",
                    "301",
                    ""
                  ],
                  [
                    "3",
                    "302",
                    "F"
                  ]
                ]
              },
              "series": "e.take(e.b1).i1.sum_for_patient()",
              "output": [
                [
                  "1",
                  "203"
                ],
                [
                  "2",
                  "201"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "1.1.2",
              "title": "Take with expr",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "111"
                  ],
                  [
                    "1",
                    "102",
                    "112"
                  ],
                  [
                    "1",
                    "103",
                    "113"
                  ],
                  [
                    "2",
                    "201",
                    "211"
                  ],
                  [
                    "2",
                    "202",
                    "212"
                  ],
                  [
                    "2",
                    "203",
                    "213"
                  ],
                  [
                    "3",
                    "301",
                    ""
                  ]
                ]
              },
              "series": "e.take((e.i1 + e.i2) < 413).i1.sum_for_patient()",
              "output": [
                [
                  "1",
                  "306"
                ],
                [
                  "2",
                  "201"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "1.1.3",
              "title": "Take with constant true",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ]
              },
              "series": "e.take(True).count_for_patient()",
              "output": [
                [
                  "1",
                  "2"
                ],
                [
                  "2",
                  "1"
                ]
              ]
            },
            {
              "id": "1.1.4",
              "title": "Take with constant false",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ]
              },
              "series": "e.take(False).count_for_patient()",
              "output": [
                [
                  "1",
                  "0"
                ],
                [
                  "2",
                  "0"
                ]
              ]
            },
            {
              "id": "1.1.5",
              "title": "Chain multiple takes",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1",
                    "b1"
                  ],
                  [
                    "1",
                    "1",
                    "T"
                  ],
                  [
                    "1",
                    "2",
                    "T"
                  ],
                  [
                    "1",
                    "3",
                    "F"
                  ]
                ]
              },
              "series": "e.take(e.i1 >= 2).take(e.b1).i1.sum_for_patient()",
              "output": [
                [
                  "1",
                  "2"
                ]
              ]
            }
          ]
        },
        {
          "id": "1.2",
          "title": "Excluding rows",
          "paragraphs": [
            {
              "id": "1.2.1",
              "title": "Drop with column",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1",
                    "b1"
                  ],
                  [
                    "1",
                    "101",
                    "T"
                  ],
                  [
                    "1",
                    "102",
                    "T"
                  ],
                  [
                    "1",
                    "103",
                    ""
                  ],
                  [
                    "2",
                    "201",
                    "T"
                  ],
                  [
                    "2",
                    "202",
                    ""
                  ],
                  [
                    "2",
                    "203",
                    "F"
                  ],
                  [
                    "3",
                    "301",
                    "T"
                  ],
                  [
                    "3",
                    "302",
                    "T"
                  ]
                ]
              },
              "series": "e.drop(e.b1).i1.sum_for_patient()",
              "output": [
                [
                  "1",
                  "103"
                ],
                [
                  "2",
                  "405"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "1.2.2",
              "title": "Drop with expr",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "111"
                  ],
                  [
                    "1",
                    "102",
                    "112"
                  ],
                  [
                    "1",
                    "103",
                    "113"
                  ],
                  [
                    "2",
                    "201",
                    "211"
                  ],
                  [
                    "2",
                    "202",
                    "212"
                  ],
                  [
                    "2",
                    "203",
                    "213"
                  ],
                  [
                    "3",
                    "301",
                    ""
                  ]
                ]
              },
              "series": "e.drop((e.i1 + e.i2) < 413).i1.sum_for_patient()",
              "output": [
                [
                  "1",
                  ""
                ],
                [
                  "2",
                  "405"
                ],
                [
                  "3",
                  "301"
                ]
              ]
            },
            {
              "id": "1.2.3",
              "title": "Drop with constant true",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ]
              },
              "series": "e.drop(True).count_for_patient()",
              "output": [
                [
                  "1",
                  "0"
                ],
                [
                  "2",
                  "0"
                ]
              ]
            },
            {
              "id": "1.2.4",
              "title": "Drop with constant false",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ]
              },
              "series": "e.drop(False).count_for_patient()",
              "output": [
                [
                  "1",
                  "2"
                ],
                [
                  "2",
                  "1"
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "2",
      "title": "Picking one row for each patient from an event frame",
      "sections": [
        {
          "id": "2.1",
          "title": "Picking the first or last row for each patient",
          "paragraphs": [
            {
              "id": "2.1.1",
              "title": "Sort by column pick first",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "1",
                    "103"
                  ],
                  [
                    "2",
                    "203"
                  ],
                  [
                    "2",
                    "202"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ]
              },
              "series": "e.sort_by(e.i1).first_for_patient().i1",
              "output": [
                [
                  "1",
                  "101"
                ],
                [
                  "2",
                  "201"
                ]
              ]
            },
            {
              "id": "2.1.2",
              "title": "Sort by column pick last",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "1",
                    "103"
                  ],
                  [
                    "2",
                    "203"
                  ],
                  [
                    "2",
                    "202"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ]
              },
              "series": "e.sort_by(e.i1).last_for_patient().i1",
              "output": [
                [
                  "1",
                  "103"
                ],
                [
                  "2",
                  "203"
                ]
              ]
            }
          ]
        },
        {
          "id": "2.2",
          "title": "Sort by more than one column and pick the first or last row for each patient",
          "paragraphs": [
            {
              "id": "2.2.1",
              "title": "Sort by multiple columns pick first",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "3"
                  ],
                  [
                    "1",
                    "102",
                    "2"
                  ],
                  [
                    "1",
                    "102",
                    "1"
                  ],
                  [
                    "2",
                    "203",
                    "1"
                  ],
                  [
                    "2",
                    "202",
                    "2"
                  ],
                  [
                    "2",
                    "202",
                    "3"
                  ]
                ]
              },
              "series": "e.sort_by(e.i1, e.i2).first_for_patient().i2",
              "output": [
                [
                  "1",
                  "3"
                ],
                [
                  "2",
                  "2"
                ]
              ]
            },
            {
              "id": "2.2.2",
              "title": "Sort by multiple columns pick last",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "3"
                  ],
                  [
                    "1",
                    "102",
                    "2"
                  ],
                  [
                    "1",
                    "102",
                    "1"
                  ],
                  [
                    "2",
                    "203",
                    "1"
                  ],
                  [
                    "2",
                    "202",
                    "2"
                  ],
                  [
                    "2",
                    "202",
                    "3"
                  ]
                ]
              },
              "series": "e.sort_by(e.i1, e.i2).last_for_patient().i2",
              "output": [
                [
                  "1",
                  "2"
                ],
                [
                  "2",
                  "1"
                ]
              ]
            }
          ]
        },
        {
          "id": "2.3",
          "title": "Picking the first or last row for each patient where a column contains NULLs",
          "paragraphs": [
            {
              "id": "2.3.1",
              "title": "Sort by column with nulls and pick first",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    ""
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "1",
                    "103"
                  ],
                  [
                    "2",
                    "203"
                  ],
                  [
                    "2",
                    "202"
                  ],
                  [
                    "2",
                    ""
                  ]
                ]
              },
              "series": "e.sort_by(e.i1).first_for_patient().i1",
              "output": [
                [
                  "1",
                  ""
                ],
                [
                  "2",
                  ""
                ]
              ]
            },
            {
              "id": "2.3.2",
              "title": "Sort by column with nulls and pick last",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    ""
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "1",
                    "103"
                  ],
                  [
                    "2",
                    "203"
                  ],
                  [
                    "2",
                    "202"
                  ],
                  [
                    "2",
                    ""
                  ]
                ]
              },
              "series": "e.sort_by(e.i1).last_for_patient().i1",
              "output": [
                [
                  "1",
                  "103"
                ],
                [
                  "2",
                  "203"
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "3",
      "title": "Aggregating event and patient frames",
      "sections": [
        {
          "id": "3.1",
          "title": "Determining whether a row exists for each patient",
          "paragraphs": [
            {
              "id": "3.1.1",
              "title": "Exists for patient on event frame",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "3",
                    "301"
                  ]
                ],
                "e": [
                  [
                    "patient",
                    "b1"
                  ],
                  [
                    "1",
                    "T"
                  ],
                  [
                    "1",
                    "F"
                  ],
                  [
                    "2",
                    ""
                  ]
                ]
              },
              "series": "e.exists_for_patient()",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "F"
                ]
              ]
            },
            {
              "id": "3.1.2",
              "title": "Exists for patient on patient frame",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "3",
                    "301"
                  ]
                ],
                "e": [
                  [
                    "patient",
                    "b1"
                  ],
                  [
                    "1",
                    "T"
                  ],
                  [
                    "1",
                    "F"
                  ],
                  [
                    "2",
                    ""
                  ]
                ]
              },
              "series": "p.exists_for_patient()",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "T"
                ]
              ]
            }
          ]
        },
        {
          "id": "3.2",
          "title": "Counting the rows for each patient",
          "paragraphs": [
            {
              "id": "3.2.1",
              "title": "Count for patient on event frame",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "3",
                    "301"
                  ]
                ],
                "e": [
                  [
                    "patient",
                    "b1"
                  ],
                  [
                    "1",
                    "T"
                  ],
                  [
                    "1",
                    "F"
                  ],
                  [
                    "2",
                    ""
                  ]
                ]
              },
              "series": "e.count_for_patient()",
              "output": [
                [
                  "1",
                  "2"
                ],
                [
                  "2",
                  "1"
                ],
                [
                  "3",
                  "0"
                ]
              ]
            },
            {
              "id": "3.2.2",
              "title": "Count for patient on patient frame",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "3",
                    "301"
                  ]
                ],
                "e": [
                  [
                    "patient",
                    "b1"
                  ],
                  [
                    "1",
                    "T"
                  ],
                  [
                    "1",
                    "F"
                  ],
                  [
                    "2",
                    ""
                  ]
                ]
              },
              "series": "p.count_for_patient()",
              "output": [
                [
                  "1",
                  "1"
                ],
                [
                  "2",
                  "1"
                ],
                [
                  "3",
                  "1"
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "4",
      "title": "Aggregating event series",
      "sections": [
        {
          "id": "4.1",
          "title": "Minimum and maximum aggregations",
          "paragraphs": [
            {
              "id": "4.1.1",
              "title": "Minimum for patient",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "1",
                    "103"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "2",
                    ""
                  ],
                  [
                    "3",
                    ""
                  ]
                ]
              },
              "series": "e.i1.minimum_for_patient()",
              "output": [
                [
                  "1",
                  "101"
                ],
                [
                  "2",
                  "201"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "4.1.2",
              "title": "Maximum for patient",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "1",
                    "103"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "2",
                    ""
                  ],
                  [
                    "3",
                    ""
                  ]
                ]
              },
              "series": "e.i1.maximum_for_patient()",
              "output": [
                [
                  "1",
                  "103"
                ],
                [
                  "2",
                  "201"
                ],
                [
                  "3",
                  ""
                ]
              ]
            }
          ]
        },
        {
          "id": "4.2",
          "title": "Sum aggregation",
          "paragraphs": [
            {
              "id": "4.2.1",
              "title": "Sum for patient",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "1",
                    "103"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "2",
                    ""
                  ],
                  [
                    "2",
                    "203"
                  ],
                  [
                    "3",
                    ""
                  ]
                ]
              },
              "series": "e.i1.sum_for_patient()",
              "output": [
                [
                  "1",
                  "306"
                ],
                [
                  "2",
                  "404"
                ],
                [
                  "3",
                  ""
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "5",
      "title": "Combining series",
      "sections": [
        {
          "id": "5.1",
          "title": "Combining two patient series",
          "paragraphs": [
            {
              "id": "5.1.1",
              "title": "Patient series and patient series",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "102"
                  ],
                  [
                    "2",
                    "201",
                    "202"
                  ]
                ]
              },
              "series": "p.i1 + p.i2",
              "output": [
                [
                  "1",
                  "203"
                ],
                [
                  "2",
                  "403"
                ]
              ]
            }
          ]
        },
        {
          "id": "5.2",
          "title": "Combining a patient series with a value",
          "paragraphs": [
            {
              "id": "5.2.1",
              "title": "Patient series and value",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ]
              },
              "series": "p.i1 + 1",
              "output": [
                [
                  "1",
                  "102"
                ],
                [
                  "2",
                  "202"
                ]
              ]
            },
            {
              "id": "5.2.2",
              "title": "Value and patient series",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ]
              },
              "series": "1 + p.i1",
              "output": [
                [
                  "1",
                  "102"
                ],
                [
                  "2",
                  "202"
                ]
              ]
            }
          ]
        },
        {
          "id": "5.3",
          "title": "Combining two event series",
          "paragraphs": [
            {
              "id": "5.3.1",
              "title": "Event series and event series",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "111"
                  ],
                  [
                    "1",
                    "102",
                    "112"
                  ],
                  [
                    "2",
                    "201",
                    "211"
                  ],
                  [
                    "2",
                    "202",
                    "212"
                  ]
                ]
              },
              "series": "(e.i1 + e.i2).sum_for_patient()",
              "output": [
                [
                  "1",
                  "426"
                ],
                [
                  "2",
                  "826"
                ]
              ]
            }
          ]
        },
        {
          "id": "5.4",
          "title": "Combining an event series with a patient series",
          "paragraphs": [
            {
              "id": "5.4.1",
              "title": "Event series and patient series",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ],
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "111"
                  ],
                  [
                    "1",
                    "112"
                  ],
                  [
                    "2",
                    "211"
                  ],
                  [
                    "2",
                    "212"
                  ]
                ]
              },
              "series": "(e.i1 + p.i1).sum_for_patient()",
              "output": [
                [
                  "1",
                  "425"
                ],
                [
                  "2",
                  "825"
                ]
              ]
            },
            {
              "id": "5.4.2",
              "title": "Patient series and event series",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ],
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "111"
                  ],
                  [
                    "1",
                    "112"
                  ],
                  [
                    "2",
                    "211"
                  ],
                  [
                    "2",
                    "212"
                  ]
                ]
              },
              "series": "(p.i1 + e.i1).sum_for_patient()",
              "output": [
                [
                  "1",
                  "425"
                ],
                [
                  "2",
                  "825"
                ]
              ]
            }
          ]
        },
        {
          "id": "5.5",
          "title": "Combining an event series with a value",
          "paragraphs": [
            {
              "id": "5.5.1",
              "title": "Event series and value",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "2",
                    "202"
                  ]
                ]
              },
              "series": "(e.i1 + 1).sum_for_patient()",
              "output": [
                [
                  "1",
                  "205"
                ],
                [
                  "2",
                  "405"
                ]
              ]
            },
            {
              "id": "5.5.2",
              "title": "Value and event series",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "2",
                    "202"
                  ]
                ]
              },
              "series": "(1 + e.i1).sum_for_patient()",
              "output": [
                [
                  "1",
                  "205"
                ],
                [
                  "2",
                  "405"
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "6",
      "title": "Operations on all series",
      "sections": [
        {
          "id": "6.1",
          "title": "Testing for equality",
          "paragraphs": [
            {
              "id": "6.1.1",
              "title": "Equals",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "101"
                  ],
                  [
                    "2",
                    "201",
                    "202"
                  ],
                  [
                    "3",
                    "301",
                    ""
                  ],
                  [
                    "4",
                    "",
                    ""
                  ]
                ]
              },
              "series": "p.i1 == p.i2",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  ""
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "6.1.2",
              "title": "Not equals",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "101"
                  ],
                  [
                    "2",
                    "201",
                    "202"
                  ],
                  [
                    "3",
                    "301",
                    ""
                  ],
                  [
                    "4",
                    "",
                    ""
                  ]
                ]
              },
              "series": "p.i1 != p.i2",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  ""
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "6.1.3",
              "title": "Is null",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "101"
                  ],
                  [
                    "2",
                    "201",
                    "202"
                  ],
                  [
                    "3",
                    "301",
                    ""
                  ],
                  [
                    "4",
                    "",
                    ""
                  ]
                ]
              },
              "series": "p.i1.is_null()",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  "T"
                ]
              ]
            },
            {
              "id": "6.1.4",
              "title": "Is not null",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "101"
                  ],
                  [
                    "2",
                    "201",
                    "202"
                  ],
                  [
                    "3",
                    "301",
                    ""
                  ],
                  [
                    "4",
                    "",
                    ""
                  ]
                ]
              },
              "series": "p.i1.is_not_null()",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  "F"
                ]
              ]
            }
          ]
        },
        {
          "id": "6.2",
          "title": "Testing for containment",
          "paragraphs": [
            {
              "id": "6.2.1",
              "title": "Is in",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "3",
                    "301"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.i1.is_in([101, 301])",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  ""
                ]
              ]
            }
          ]
        },
        {
          "id": "6.3",
          "title": "Map from one set of values to another",
          "paragraphs": [
            {
              "id": "6.3.1",
              "title": "Map values",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "3",
                    "301"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.i1.map_values({101: \"a\", 201: \"b\", 301: \"a\"})",
              "output": [
                [
                  "1",
                  "a"
                ],
                [
                  "2",
                  "b"
                ],
                [
                  "3",
                  "a"
                ],
                [
                  "4",
                  ""
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "7",
      "title": "Operations on boolean series",
      "sections": [
        {
          "id": "7.1",
          "title": "Logical operations",
          "paragraphs": [
            {
              "id": "7.1.1",
              "title": "Not",
              "tables": {
                "p": [
                  [
                    "patient",
                    "b1"
                  ],
                  [
                    "1",
                    "T"
                  ],
                  [
                    "2",
                    ""
                  ],
                  [
                    "3",
                    "F"
                  ]
                ]
              },
              "series": "~p.b1",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  ""
                ],
                [
                  "3",
                  "T"
                ]
              ]
            },
            {
              "id": "7.1.2",
              "title": "And",
              "tables": {
                "p": [
                  [
                    "patient",
                    "b1",
                    "b2"
                  ],
                  [
                    "1",
                    "T",
                    "T"
                  ],
                  [
                    "2",
                    "T",
                    ""
                  ],
                  [
                    "3",
                    "T",
                    "F"
                  ],
                  [
                    "4",
                    "",
                    "T"
                  ],
                  [
                    "5",
                    "",
                    ""
                  ],
                  [
                    "6",
                    "",
                    "F"
                  ],
                  [
                    "7",
                    "F",
                    "T"
                  ],
                  [
                    "8",
                    "F",
                    ""
                  ],
                  [
                    "9",
                    "F",
                    "F"
                  ]
                ]
              },
              "series": "p.b1 & p.b2",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  ""
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  ""
                ],
                [
                  "5",
                  ""
                ],
                [
                  "6",
                  "F"
                ],
                [
                  "7",
                  "F"
                ],
                [
                  "8",
                  "F"
                ],
                [
                  "9",
                  "F"
                ]
              ]
            },
            {
              "id": "7.1.3",
              "title": "Or",
              "tables": {
                "p": [
                  [
                    "patient",
                    "b1",
                    "b2"
                  ],
                  [
                    "1",
                    "T",
                    "T"
                  ],
                  [
                    "2",
                    "T",
                    ""
                  ],
                  [
                    "3",
                    "T",
                    "F"
                  ],
                  [
                    "4",
                    "",
                    "T"
                  ],
                  [
                    "5",
                    "",
                    ""
                  ],
                  [
                    "6",
                    "",
                    "F"
                  ],
                  [
                    "7",
                    "F",
                    "T"
                  ],
                  [
                    "8",
                    "F",
                    ""
                  ],
                  [
                    "9",
                    "F",
                    "F"
                  ]
                ]
              },
              "series": "p.b1 | p.b2",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  "T"
                ],
                [
                  "5",
                  ""
                ],
                [
                  "6",
                  ""
                ],
                [
                  "7",
                  "T"
                ],
                [
                  "8",
                  ""
                ],
                [
                  "9",
                  "F"
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "8",
      "title": "Operations on integer series",
      "sections": [
        {
          "id": "8.1",
          "title": "Arithmetic operations",
          "paragraphs": [
            {
              "id": "8.1.1",
              "title": "Negate",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "111"
                  ],
                  [
                    "2",
                    "201",
                    ""
                  ]
                ]
              },
              "series": "-p.i2",
              "output": [
                [
                  "1",
                  "-111"
                ],
                [
                  "2",
                  ""
                ]
              ]
            },
            {
              "id": "8.1.2",
              "title": "Add",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "111"
                  ],
                  [
                    "2",
                    "201",
                    ""
                  ]
                ]
              },
              "series": "p.i1 + p.i2",
              "output": [
                [
                  "1",
                  "212"
                ],
                [
                  "2",
                  ""
                ]
              ]
            },
            {
              "id": "8.1.3",
              "title": "Subtract",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "111"
                  ],
                  [
                    "2",
                    "201",
                    ""
                  ]
                ]
              },
              "series": "p.i1 - p.i2",
              "output": [
                [
                  "1",
                  "-10"
                ],
                [
                  "2",
                  ""
                ]
              ]
            }
          ]
        },
        {
          "id": "8.2",
          "title": "Comparison operations",
          "paragraphs": [
            {
              "id": "8.2.1",
              "title": "Less than",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "201"
                  ],
                  [
                    "2",
                    "201",
                    "201"
                  ],
                  [
                    "3",
                    "301",
                    "201"
                  ],
                  [
                    "4",
                    "",
                    "201"
                  ]
                ]
              },
              "series": "p.i1 < p.i2",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "8.2.2",
              "title": "Less than or equal to",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "201"
                  ],
                  [
                    "2",
                    "201",
                    "201"
                  ],
                  [
                    "3",
                    "301",
                    "201"
                  ],
                  [
                    "4",
                    "",
                    "201"
                  ]
                ]
              },
              "series": "p.i1 <= p.i2",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "8.2.3",
              "title": "Greater than",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "201"
                  ],
                  [
                    "2",
                    "201",
                    "201"
                  ],
                  [
                    "3",
                    "301",
                    "201"
                  ],
                  [
                    "4",
                    "",
                    "201"
                  ]
                ]
              },
              "series": "p.i1 > p.i2",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "8.2.4",
              "title": "Greater than or equal to",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "201"
                  ],
                  [
                    "2",
                    "201",
                    "201"
                  ],
                  [
                    "3",
                    "301",
                    "201"
                  ],
                  [
                    "4",
                    "",
                    "201"
                  ]
                ]
              },
              "series": "p.i1 >= p.i2",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  ""
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "9",
      "title": "Operations on all series containing codes",
      "sections": [
        {
          "id": "9.1",
          "title": "Testing for containment using codes",
          "paragraphs": [
            {
              "id": "9.1.1",
              "title": "Is in",
              "tables": {
                "p": [
                  [
                    "patient",
                    "c1"
                  ],
                  [
                    "1",
                    "abc"
                  ],
                  [
                    "2",
                    "def"
                  ],
                  [
                    "3",
                    "ghi"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.c1.is_in([SNOMEDCTCode(\"abc\"), SNOMEDCTCode(\"ghi\")])",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "9.1.2",
              "title": "Is not in",
              "tables": {
                "p": [
                  [
                    "patient",
                    "c1"
                  ],
                  [
                    "1",
                    "abc"
                  ],
                  [
                    "2",
                    "def"
                  ],
                  [
                    "3",
                    "ghi"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.c1.is_not_in([SNOMEDCTCode(\"abc\"), SNOMEDCTCode(\"ghi\")])",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "9.1.3",
              "title": "Is in codelist csv",
              "tables": {
                "p": [
                  [
                    "patient",
                    "c1"
                  ],
                  [
                    "1",
                    "abc"
                  ],
                  [
                    "2",
                    "def"
                  ],
                  [
                    "3",
                    "ghi"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.c1.is_in(codelist)",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  ""
                ]
              ]
            }
          ]
        },
        {
          "id": "9.2",
          "title": "Test mapping codes to categories using a categorised codelist",
          "paragraphs": [
            {
              "id": "9.2.1",
              "title": "Map codes to categories",
              "tables": {
                "p": [
                  [
                    "patient",
                    "c1"
                  ],
                  [
                    "1",
                    "abc"
                  ],
                  [
                    "2",
                    "def"
                  ],
                  [
                    "3",
                    "ghi"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.c1.to_category(codelist.my_categorisation)",
              "output": [
                [
                  "1",
                  "cat1"
                ],
                [
                  "2",
                  ""
                ],
                [
                  "3",
                  "cat2"
                ],
                [
                  "4",
                  ""
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "10",
      "title": "Logical case expressions",
      "sections": [
        {
          "id": "10.1",
          "title": "Logical case expressions",
          "paragraphs": [
            {
              "id": "10.1.1",
              "title": "Case with expression",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "6"
                  ],
                  [
                    "2",
                    "7"
                  ],
                  [
                    "3",
                    "8"
                  ],
                  [
                    "4",
                    "9"
                  ],
                  [
                    "5",
                    ""
                  ]
                ]
              },
              "series": "case(\n    when(p.i1 < 8).then(p.i1),\n    when(p.i1 > 8).then(100),\n)",
              "output": [
                [
                  "1",
                  "6"
                ],
                [
                  "2",
                  "7"
                ],
                [
                  "3",
                  ""
                ],
                [
                  "4",
                  "100"
                ],
                [
                  "5",
                  ""
                ]
              ]
            },
            {
              "id": "10.1.2",
              "title": "Case with default",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "6"
                  ],
                  [
                    "2",
                    "7"
                  ],
                  [
                    "3",
                    "8"
                  ],
                  [
                    "4",
                    "9"
                  ],
                  [
                    "5",
                    ""
                  ]
                ]
              },
              "series": "case(\n    when(p.i1 < 8).then(p.i1),\n    when(p.i1 > 8).then(100),\n    default=0,\n)",
              "output": [
                [
                  "1",
                  "6"
                ],
                [
                  "2",
                  "7"
                ],
                [
                  "3",
                  "0"
                ],
                [
                  "4",
                  "100"
                ],
                [
                  "5",
                  "0"
                ]
              ]
            },
            {
              "id": "10.1.3",
              "title": "Case with boolean column",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "b1"
                  ],
                  [
                    "1",
                    "6",
                    "T"
                  ],
                  [
                    "2",
                    "7",
                    "F"
                  ],
                  [
                    "3",
                    "9",
                    "F"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "case(\n    when(p.b1).then(p.i1),\n    when(p.i1 > 8).then(100),\n)",
              "output": [
                [
                  "1",
                  "6"
                ],
                [
                  "2",
                  ""
                ],
                [
                  "3",
                  "100"
                ],
                [
                  "4",
                  ""
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "11",
      "title": "Operations on all series containing dates",
      "sections": [
        {
          "id": "11.1",
          "title": "Operations which apply to all series containing dates",
          "paragraphs": [
            {
              "id": "11.1.1",
              "title": "Get year",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "i1"
                  ],
                  [
                    "1",
                    "1990-01-02",
                    "100"
                  ],
                  [
                    "2",
                    "2000-03-04",
                    "200"
                  ],
                  [
                    "3",
                    "",
                    ""
                  ]
                ]
              },
              "series": "p.d1.year",
              "output": [
                [
                  "1",
                  "1990"
                ],
                [
                  "2",
                  "2000"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "11.1.2",
              "title": "Get month",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "i1"
                  ],
                  [
                    "1",
                    "1990-01-02",
                    "100"
                  ],
                  [
                    "2",
                    "2000-03-04",
                    "200"
                  ],
                  [
                    "3",
                    "",
                    ""
                  ]
                ]
              },
              "series": "p.d1.month",
              "output": [
                [
                  "1",
                  "1"
                ],
                [
                  "2",
                  "3"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "11.1.3",
              "title": "Get day",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "i1"
                  ],
                  [
                    "1",
                    "1990-01-02",
                    "100"
                  ],
                  [
                    "2",
                    "2000-03-04",
                    "200"
                  ],
                  [
                    "3",
                    "",
                    ""
                  ]
                ]
              },
              "series": "p.d1.day",
              "output": [
                [
                  "1",
                  "2"
                ],
                [
                  "2",
                  "4"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "11.1.4",
              "title": "Add days",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "i1"
                  ],
                  [
                    "1",
                    "1990-01-02",
                    "100"
                  ],
                  [
                    "2",
                    "2000-03-04",
                    "200"
                  ],
                  [
                    "3",
                    "",
                    ""
                  ]
                ]
              },
              "series": "p.d1.add_days(p.i1)",
              "output": [
                [
                  "1",
                  "1990-04-12"
                ],
                [
                  "2",
                  "2000-09-20"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "11.1.5",
              "title": "Subtract days",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "i1"
                  ],
                  [
                    "1",
                    "1990-01-02",
                    "100"
                  ],
                  [
                    "2",
                    "2000-03-04",
                    "200"
                  ],
                  [
                    "3",
                    "",
                    ""
                  ]
                ]
              },
              "series": "p.d1.subtract_days(p.i1)",
              "output": [
                [
                  "1",
                  "1989-09-24"
                ],
                [
                  "2",
                  "1999-08-17"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "11.1.6",
              "title": "Difference in years",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "1990-01-30"
                  ],
                  [
                    "2",
                    "2000-01-15"
                  ],
                  [
                    "3",
                    "2020-01-20"
                  ],
                  [
                    "4",
                    "2022-01-10"
                  ],
                  [
                    "5",
                    ""
                  ]
                ]
              },
              "series": "p.d1.difference_in_years(date(2020, 1, 15))",
              "output": [
                [
                  "1",
                  "29"
                ],
                [
                  "2",
                  "20"
                ],
                [
                  "3",
                  "-1"
                ],
                [
                  "4",
                  "-2"
                ],
                [
                  "5",
                  ""
                ]
              ]
            }
          ]
        },
        {
          "id": "11.2",
          "title": "Comparisons involving dates",
          "paragraphs": [
            {
              "id": "11.2.1",
              "title": "Is before",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "1990-01-01"
                  ],
                  [
                    "2",
                    "2000-01-01"
                  ],
                  [
                    "3",
                    "2010-01-01"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.d1.is_before(\"2000-01-01\")",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "11.2.2",
              "title": "Is on or before",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "1990-01-01"
                  ],
                  [
                    "2",
                    "2000-01-01"
                  ],
                  [
                    "3",
                    "2010-01-01"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.d1.is_on_or_before(\"2000-01-01\")",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "11.2.3",
              "title": "Is after",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "1990-01-01"
                  ],
                  [
                    "2",
                    "2000-01-01"
                  ],
                  [
                    "3",
                    "2010-01-01"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.d1.is_after(\"2000-01-01\")",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "11.2.4",
              "title": "Is on or after",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "1990-01-01"
                  ],
                  [
                    "2",
                    "2000-01-01"
                  ],
                  [
                    "3",
                    "2010-01-01"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.d1.is_on_or_after(\"2000-01-01\")",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  ""
                ]
              ]
            }
          ]
        },
        {
          "id": "11.3",
          "title": "Types usable in comparisons involving dates",
          "paragraphs": [
            {
              "id": "11.3.1",
              "title": "Accepts python date object",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "d2"
                  ],
                  [
                    "1",
                    "1990-01-01",
                    "1980-01-01"
                  ],
                  [
                    "2",
                    "2000-01-01",
                    "1980-01-01"
                  ],
                  [
                    "3",
                    "2010-01-01",
                    "2020-01-01"
                  ],
                  [
                    "4",
                    "",
                    "2020-01-01"
                  ]
                ]
              },
              "series": "p.d1.is_before(datetime.date(2000, 1, 20))",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "11.3.2",
              "title": "Accepts iso formated date string",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "d2"
                  ],
                  [
                    "1",
                    "1990-01-01",
                    "1980-01-01"
                  ],
                  [
                    "2",
                    "2000-01-01",
                    "1980-01-01"
                  ],
                  [
                    "3",
                    "2010-01-01",
                    "2020-01-01"
                  ],
                  [
                    "4",
                    "",
                    "2020-01-01"
                  ]
                ]
              },
              "series": "p.d1.is_before(\"2000-01-20\")",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "11.3.3",
              "title": "Accepts another date series",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "d2"
                  ],
                  [
                    "1",
                    "1990-01-01",
                    "1980-01-01"
                  ],
                  [
                    "2",
                    "2000-01-01",
                    "1980-01-01"
                  ],
                  [
                    "3",
                    "2010-01-01",
                    "2020-01-01"
                  ],
                  [
                    "4",
                    "",
                    "2020-01-01"
                  ]
                ]
              },
              "series": "p.d1.is_before(p.d2)",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  ""
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "12",
      "title": "Operations on all series containing strings",
      "sections": [
        {
          "id": "12.1",
          "title": "Testing whether one string contains another string",
          "paragraphs": [
            {
              "id": "12.1.1",
              "title": "Contains fixed value",
              "tables": {
                "p": [
                  [
                    "patient",
                    "s1"
                  ],
                  [
                    "1",
                    "ab"
                  ],
                  [
                    "2",
                    "ab12"
                  ],
                  [
                    "3",
                    "12ab"
                  ],
                  [
                    "4",
                    "12ab45"
                  ],
                  [
                    "5",
                    "a b"
                  ],
                  [
                    "6",
                    "AB"
                  ],
                  [
                    "7",
                    ""
                  ]
                ]
              },
              "series": "p.s1.contains(\"ab\")",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  "T"
                ],
                [
                  "5",
                  "F"
                ],
                [
                  "6",
                  "F"
                ],
                [
                  "7",
                  ""
                ]
              ]
            },
            {
              "id": "12.1.2",
              "title": "Contains fixed value with special characters",
              "tables": {
                "p": [
                  [
                    "patient",
                    "s1"
                  ],
                  [
                    "1",
                    "/a%b_"
                  ],
                  [
                    "2",
                    "/ab_"
                  ],
                  [
                    "3",
                    "/a%bc"
                  ],
                  [
                    "4",
                    "a%b_"
                  ]
                ]
              },
              "series": "p.s1.contains(\"/a%b_\")",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  "F"
                ]
              ]
            },
            {
              "id": "12.1.3",
              "title": "Contains value from column",
              "tables": {
                "p": [
                  [
                    "patient",
                    "s1",
                    "s2"
                  ],
                  [
                    "1",
                    "ab",
                    "ab"
                  ],
                  [
                    "2",
                    "cd12",
                    "cd"
                  ],
                  [
                    "3",
                    "12ef",
                    "ef"
                  ],
                  [
                    "4",
                    "12gh45",
                    "gh"
                  ],
                  [
                    "5",
                    "i j",
                    "ij"
                  ],
                  [
                    "6",
                    "KL",
                    "kl"
                  ],
                  [
                    "7",
                    "",
                    "mn"
                  ],
                  [
                    "8",
                    "ab",
                    ""
                  ]
                ]
              },
              "series": "p.s1.contains(p.s2)",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  "T"
                ],
                [
                  "5",
                  "F"
                ],
                [
                  "6",
                  "F"
                ],
                [
                  "7",
                  ""
                ],
                [
                  "8",
                  ""
                ]
              ]
            },
            {
              "id": "12.1.4",
              "title": "Contains value from column with special characters",
              "tables": {
                "p": [
                  [
                    "patient",
                    "s1",
                    "s2"
                  ],
                  [
                    "1",
                    "/a%b_",
                    "/a%b_"
                  ],
                  [
                    "2",
                    "/ab_",
                    "/a%b_"
                  ],
                  [
                    "3",
                    "/a%bc",
                    "/a%b_"
                  ],
                  [
                    "4",
                    "a%b_",
                    "/a%b_"
                  ]
                ]
              },
              "series": "p.s1.contains(p.s2)",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  "F"
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "13",
      "title": "Defining the dataset population",
      "sections": [
        {
          "id": "13.1",
          "title": "Defining a population",
          "paragraphs": [
            {
              "id": "13.1.1",
              "title": "Population with single table",
              "tables": {
                "p": [
                  [
                    "patient",
                    "b1",
                    "i1"
                  ],
                  [
                    "1",
                    "F",
                    "10"
                  ],
                  [
                    "2",
                    "T",
                    "20"
                  ],
                  [
                    "3",
                    "F",
                    "30"
                  ]
                ]
              },
              "series": "p.i1\nset_population(~p.b1)",
              "output": [
                [
                  "1",
                  "10"
                ],
                [
                  "3",
                  "30"
                ]
              ],
              "text": "Extract a column from a patient table after limiting the population by another column."
            },
            {
              "id": "13.1.2",
              "title": "Population with multiple tables",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "10"
                  ],
                  [
                    "2",
                    "20"
                  ],
                  [
                    "3",
                    "0"
                  ]
                ],
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "3",
                    "301"
                  ],
                  [
                    "4",
                    "401"
                  ]
                ]
              },
              "series": "e.exists_for_patient()\nset_population(p.i1 > 0)",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "F"
                ]
              ],
              "text": "Limit the patient population by a column in one table, and return values from another\ntable."
            },
            {
              "id": "13.1.3",
              "title": "Case with case expression",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "6"
                  ],
                  [
                    "2",
                    "7"
                  ],
                  [
                    "3",
                    "9"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.i1\nset_population(\n    case(\n        when(p.i1 <= 8).then(True),\n        when(p.i1 > 8).then(False),\n    )\n)",
              "output": [
                [
                  "1",
                  "6"
                ],
                [
                  "2",
                  "7"
                ]
              ],
              "text": "Limit the patient population by a case expression."
            }
          ],
          "text": "\n`set_population` is used to limit the population from which data is extracted.\n"
        }
      ]
    }
  ]
}
