{
  "backends": [
    {
      "name": "DatabricksBackend",
      "implements": [
        "databuilder.tables.beta.databricks",
        "databuilder.tables.beta.smoketest"
      ],
      "contracts": []
    },
    {
      "name": "GraphnetBackend",
      "implements": [
        "databuilder.tables.beta.smoketest"
      ],
      "contracts": []
    },
    {
      "name": "TPPBackend",
      "implements": [
        "databuilder.tables.beta.tpp",
        "databuilder.tables.beta.smoketest"
      ],
      "contracts": []
    }
  ],
  "schemas": [
    {
      "dotted_path": "databuilder.tables.beta.databricks",
      "hierarchy": [
        "beta",
        "databricks"
      ],
      "docstring": [],
      "implemented_by": [
        "DatabricksBackend"
      ],
      "tables": [
        {
          "name": "hospital_admissions",
          "docstring": [
            "TODO."
          ],
          "columns": [
            {
              "name": "admission_date",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "primary_diagnosis",
              "description": "",
              "type": "str",
              "constraints": []
            },
            {
              "name": "admission_method",
              "description": "",
              "type": "int",
              "constraints": []
            },
            {
              "name": "episode_is_finished",
              "description": "",
              "type": "bool",
              "constraints": []
            },
            {
              "name": "spell_id",
              "description": "",
              "type": "int",
              "constraints": []
            }
          ]
        },
        {
          "name": "patients",
          "docstring": [
            "TODO."
          ],
          "columns": [
            {
              "name": "date_of_birth",
              "description": "",
              "type": "date",
              "constraints": []
            }
          ]
        },
        {
          "name": "prescriptions",
          "docstring": [
            "TODO."
          ],
          "columns": [
            {
              "name": "prescribed_dmd_code",
              "description": "",
              "type": "str",
              "constraints": []
            },
            {
              "name": "processing_date",
              "description": "",
              "type": "date",
              "constraints": []
            }
          ]
        }
      ]
    },
    {
      "dotted_path": "databuilder.tables.beta.graphnet",
      "hierarchy": [
        "beta",
        "graphnet"
      ],
      "docstring": [],
      "implemented_by": [],
      "tables": [
        {
          "name": "clinical_events",
          "docstring": [
            "TODO."
          ],
          "columns": [
            {
              "name": "code",
              "description": "",
              "type": "str",
              "constraints": []
            },
            {
              "name": "system",
              "description": "",
              "type": "str",
              "constraints": []
            },
            {
              "name": "date",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "numeric_value",
              "description": "",
              "type": "float",
              "constraints": []
            }
          ]
        },
        {
          "name": "covid_test_results",
          "docstring": [
            "TODO."
          ],
          "columns": [
            {
              "name": "date",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "positive_result",
              "description": "",
              "type": "bool",
              "constraints": []
            }
          ]
        },
        {
          "name": "hospitalisations_without_system",
          "docstring": [
            "TODO."
          ],
          "columns": [
            {
              "name": "code",
              "description": "",
              "type": "str",
              "constraints": []
            }
          ]
        },
        {
          "name": "patient_address",
          "docstring": [
            "TODO."
          ],
          "columns": [
            {
              "name": "patientaddress_id",
              "description": "",
              "type": "int",
              "constraints": []
            },
            {
              "name": "date_start",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "date_end",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "index_of_multiple_deprivation_rounded",
              "description": "",
              "type": "int",
              "constraints": []
            },
            {
              "name": "has_postcode",
              "description": "",
              "type": "bool",
              "constraints": []
            }
          ]
        },
        {
          "name": "patients",
          "docstring": [
            "TODO."
          ],
          "columns": [
            {
              "name": "date_of_birth",
              "description": "",
              "type": "date",
              "constraints": []
            }
          ]
        },
        {
          "name": "practice_registrations",
          "docstring": [
            "TODO."
          ],
          "columns": [
            {
              "name": "pseudo_id",
              "description": "",
              "type": "int",
              "constraints": []
            },
            {
              "name": "nuts1_region_name",
              "description": "",
              "type": "str",
              "constraints": []
            },
            {
              "name": "date_start",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "date_end",
              "description": "",
              "type": "date",
              "constraints": []
            }
          ]
        }
      ]
    },
    {
      "dotted_path": "databuilder.tables.beta.smoketest",
      "hierarchy": [
        "beta",
        "smoketest"
      ],
      "docstring": [
        "This is the minimal schema required to run the OpenSAFELY system smoke test.",
        "All backends should implement this schema."
      ],
      "implemented_by": [
        "DatabricksBackend",
        "GraphnetBackend",
        "TPPBackend"
      ],
      "tables": [
        {
          "name": "patients",
          "docstring": [],
          "columns": [
            {
              "name": "date_of_birth",
              "description": "Patient's year and month of birth, provided in format YYYY-MM-01. The day will always be the first of the month.",
              "type": "date",
              "constraints": [
                "Must be the first day of a month",
                "Must have a value"
              ]
            }
          ]
        }
      ]
    },
    {
      "dotted_path": "databuilder.tables.beta.tpp",
      "hierarchy": [
        "beta",
        "tpp"
      ],
      "docstring": [],
      "implemented_by": [
        "TPPBackend"
      ],
      "tables": [
        {
          "name": "addresses",
          "docstring": [],
          "columns": [
            {
              "name": "address_id",
              "description": "",
              "type": "int",
              "constraints": []
            },
            {
              "name": "start_date",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "end_date",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "address_type",
              "description": "",
              "type": "int",
              "constraints": []
            },
            {
              "name": "rural_urban_classification",
              "description": "",
              "type": "int",
              "constraints": []
            },
            {
              "name": "imd_rounded",
              "description": "",
              "type": "int",
              "constraints": []
            },
            {
              "name": "msoa_code",
              "description": "",
              "type": "str",
              "constraints": [
                "Must match the regular expression: 'E020[0-9]{5}'"
              ]
            },
            {
              "name": "has_postcode",
              "description": "",
              "type": "bool",
              "constraints": []
            },
            {
              "name": "care_home_is_potential_match",
              "description": "",
              "type": "bool",
              "constraints": []
            },
            {
              "name": "care_home_requires_nursing",
              "description": "",
              "type": "bool",
              "constraints": []
            },
            {
              "name": "care_home_does_not_require_nursing",
              "description": "",
              "type": "bool",
              "constraints": []
            }
          ]
        },
        {
          "name": "appointments",
          "docstring": [],
          "columns": [
            {
              "name": "booked_date",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "start_date",
              "description": "",
              "type": "date",
              "constraints": []
            }
          ]
        },
        {
          "name": "clinical_events",
          "docstring": [],
          "columns": [
            {
              "name": "date",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "snomedct_code",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "ctv3_code",
              "description": "",
              "type": "CTV3Code",
              "constraints": []
            },
            {
              "name": "numeric_value",
              "description": "",
              "type": "float",
              "constraints": []
            }
          ]
        },
        {
          "name": "emergency_care_attendances",
          "docstring": [],
          "columns": [
            {
              "name": "id",
              "description": "",
              "type": "int",
              "constraints": []
            },
            {
              "name": "arrival_date",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "discharge_destination",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_01",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_02",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_03",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_04",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_05",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_06",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_07",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_08",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_09",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_10",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_11",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_12",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_13",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_14",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_15",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_16",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_17",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_18",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_19",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_20",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_21",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_22",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_23",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            },
            {
              "name": "diagnosis_24",
              "description": "",
              "type": "SNOMEDCTCode",
              "constraints": []
            }
          ]
        },
        {
          "name": "hospital_admissions",
          "docstring": [],
          "columns": [
            {
              "name": "id",
              "description": "",
              "type": "int",
              "constraints": []
            },
            {
              "name": "admission_date",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "discharge_date",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "admission_method",
              "description": "",
              "type": "str",
              "constraints": []
            },
            {
              "name": "all_diagnoses",
              "description": "",
              "type": "str",
              "constraints": []
            },
            {
              "name": "patient_classification",
              "description": "",
              "type": "str",
              "constraints": []
            },
            {
              "name": "days_in_critical_care",
              "description": "",
              "type": "int",
              "constraints": []
            }
          ]
        },
        {
          "name": "household_memberships_2020",
          "docstring": [
            "Inferred household membership as of 2020-02-01, as determined by TPP using an as yet",
            "undocumented algorithm"
          ],
          "columns": [
            {
              "name": "household_pseudo_id",
              "description": "",
              "type": "int",
              "constraints": []
            },
            {
              "name": "household_size",
              "description": "",
              "type": "int",
              "constraints": []
            }
          ]
        },
        {
          "name": "medications",
          "docstring": [],
          "columns": [
            {
              "name": "date",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "dmd_code",
              "description": "",
              "type": "DMDCode",
              "constraints": []
            },
            {
              "name": "multilex_code",
              "description": "",
              "type": "str",
              "constraints": []
            }
          ]
        },
        {
          "name": "occupation_on_covid_vaccine_record",
          "docstring": [],
          "columns": [
            {
              "name": "is_healthcare_worker",
              "description": "",
              "type": "bool",
              "constraints": []
            }
          ]
        },
        {
          "name": "ons_cis",
          "docstring": [
            "ONS Covid Infection Survery"
          ],
          "columns": [
            {
              "name": "visit_date",
              "description": "",
              "type": "date",
              "constraints": []
            }
          ]
        },
        {
          "name": "ons_deaths",
          "docstring": [],
          "columns": [
            {
              "name": "date",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "cause_of_death_01",
              "description": "",
              "type": "ICD10Code",
              "constraints": []
            },
            {
              "name": "cause_of_death_02",
              "description": "",
              "type": "ICD10Code",
              "constraints": []
            },
            {
              "name": "cause_of_death_03",
              "description": "",
              "type": "ICD10Code",
              "constraints": []
            },
            {
              "name": "cause_of_death_04",
              "description": "",
              "type": "ICD10Code",
              "constraints": []
            },
            {
              "name": "cause_of_death_05",
              "description": "",
              "type": "ICD10Code",
              "constraints": []
            },
            {
              "name": "cause_of_death_06",
              "description": "",
              "type": "ICD10Code",
              "constraints": []
            },
            {
              "name": "cause_of_death_07",
              "description": "",
              "type": "ICD10Code",
              "constraints": []
            },
            {
              "name": "cause_of_death_08",
              "description": "",
              "type": "ICD10Code",
              "constraints": []
            },
            {
              "name": "cause_of_death_09",
              "description": "",
              "type": "ICD10Code",
              "constraints": []
            },
            {
              "name": "cause_of_death_10",
              "description": "",
              "type": "ICD10Code",
              "constraints": []
            },
            {
              "name": "cause_of_death_11",
              "description": "",
              "type": "ICD10Code",
              "constraints": []
            },
            {
              "name": "cause_of_death_12",
              "description": "",
              "type": "ICD10Code",
              "constraints": []
            },
            {
              "name": "cause_of_death_13",
              "description": "",
              "type": "ICD10Code",
              "constraints": []
            },
            {
              "name": "cause_of_death_14",
              "description": "",
              "type": "ICD10Code",
              "constraints": []
            },
            {
              "name": "cause_of_death_15",
              "description": "",
              "type": "ICD10Code",
              "constraints": []
            }
          ]
        },
        {
          "name": "patients",
          "docstring": [],
          "columns": [
            {
              "name": "date_of_birth",
              "description": "Patient's year and month of birth, provided in format YYYY-MM-01. The day will always be the first of the month.",
              "type": "date",
              "constraints": [
                "Must be the first day of a month",
                "Must have a value"
              ]
            },
            {
              "name": "sex",
              "description": "Patient's sex as defined by the options: male, female, intersex, unknown.",
              "type": "str",
              "constraints": [
                "Must have a value",
                "Must be one of: 'female', 'male', 'intersex', 'unknown'"
              ]
            },
            {
              "name": "date_of_death",
              "description": "Patient's year and month of death, provided in format YYYY-MM-01. The day will always be the first of the month.",
              "type": "date",
              "constraints": [
                "Must be the first day of a month"
              ]
            }
          ]
        },
        {
          "name": "practice_registrations",
          "docstring": [],
          "columns": [
            {
              "name": "start_date",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "end_date",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "practice_pseudo_id",
              "description": "",
              "type": "int",
              "constraints": []
            },
            {
              "name": "practice_stp",
              "description": "",
              "type": "str",
              "constraints": [
                "Must match the regular expression: 'E540000[0-9]{2}'"
              ]
            },
            {
              "name": "practice_nuts1_region_name",
              "description": "",
              "type": "str",
              "constraints": [
                "Must be one of: 'East Midlands', 'East of England', 'London', 'North East', 'North West', 'South East', 'South West', 'West Midlands', 'Yorkshire and the Humber'"
              ]
            }
          ]
        },
        {
          "name": "sgss_covid_all_tests",
          "docstring": [],
          "columns": [
            {
              "name": "specimen_taken_date",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "is_positive",
              "description": "",
              "type": "bool",
              "constraints": []
            }
          ]
        },
        {
          "name": "vaccinations",
          "docstring": [],
          "columns": [
            {
              "name": "vaccination_id",
              "description": "",
              "type": "int",
              "constraints": []
            },
            {
              "name": "date",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "target_disease",
              "description": "",
              "type": "str",
              "constraints": []
            },
            {
              "name": "product_name",
              "description": "",
              "type": "str",
              "constraints": []
            }
          ]
        }
      ]
    },
    {
      "dotted_path": "databuilder.tables.examples.tutorial",
      "hierarchy": [
        "examples",
        "tutorial"
      ],
      "docstring": [],
      "implemented_by": [],
      "tables": [
        {
          "name": "clinical_events",
          "docstring": [
            "TODO."
          ],
          "columns": [
            {
              "name": "code",
              "description": "",
              "type": "str",
              "constraints": []
            },
            {
              "name": "system",
              "description": "",
              "type": "str",
              "constraints": []
            },
            {
              "name": "date",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "numeric_value",
              "description": "",
              "type": "float",
              "constraints": []
            }
          ]
        },
        {
          "name": "hospitalisations",
          "docstring": [
            "TODO."
          ],
          "columns": [
            {
              "name": "date",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "code",
              "description": "",
              "type": "str",
              "constraints": []
            },
            {
              "name": "system",
              "description": "",
              "type": "str",
              "constraints": []
            }
          ]
        },
        {
          "name": "patient_address",
          "docstring": [
            "TODO."
          ],
          "columns": [
            {
              "name": "patientaddress_id",
              "description": "",
              "type": "int",
              "constraints": []
            },
            {
              "name": "date_start",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "date_end",
              "description": "",
              "type": "date",
              "constraints": []
            },
            {
              "name": "index_of_multiple_deprivation_rounded",
              "description": "",
              "type": "int",
              "constraints": []
            },
            {
              "name": "has_postcode",
              "description": "",
              "type": "bool",
              "constraints": []
            }
          ]
        },
        {
          "name": "patients",
          "docstring": [],
          "columns": [
            {
              "name": "date_of_birth",
              "description": "Patient's year and month of birth, provided in format YYYY-MM-01. The day will always be the first of the month.",
              "type": "date",
              "constraints": [
                "Must be the first day of a month",
                "Must have a value"
              ]
            },
            {
              "name": "sex",
              "description": "Patient's sex as defined by the options: male, female, intersex, unknown.",
              "type": "str",
              "constraints": [
                "Must have a value",
                "Must be one of: 'female', 'male', 'intersex', 'unknown'"
              ]
            },
            {
              "name": "date_of_death",
              "description": "Patient's year and month of death, provided in format YYYY-MM-01. The day will always be the first of the month.",
              "type": "date",
              "constraints": [
                "Must be the first day of a month"
              ]
            }
          ]
        },
        {
          "name": "prescriptions",
          "docstring": [
            "TODO."
          ],
          "columns": [
            {
              "name": "prescribed_dmd_code",
              "description": "",
              "type": "str",
              "constraints": []
            },
            {
              "name": "processing_date",
              "description": "",
              "type": "date",
              "constraints": []
            }
          ]
        }
      ]
    }
  ],
  "contracts": [
    {
      "name": "patients",
      "hierarchy": [
        "universal"
      ],
      "dotted_path": "databuilder.contracts.universal.patients",
      "docstring": [],
      "columns": [
        {
          "name": "date_of_birth",
          "description": "Patient's year and month of birth, provided in format YYYY-MM-01. The day will always be the first of the month.",
          "type": "date",
          "constraints": [
            "Must be the first day of a month",
            "Must have a value"
          ]
        },
        {
          "name": "sex",
          "description": "Patient's sex as defined by the options: male, female, intersex, unknown.",
          "type": "str",
          "constraints": [
            "Must have a value",
            "Must be one of: 'female', 'male', 'intersex', 'unknown'"
          ]
        },
        {
          "name": "date_of_death",
          "description": "Patient's year and month of death, provided in format YYYY-MM-01. The day will always be the first of the month.",
          "type": "date",
          "constraints": [
            "Must be the first day of a month"
          ]
        }
      ],
      "contract_support": []
    },
    {
      "name": "clinical_events",
      "hierarchy": [
        "wip"
      ],
      "dotted_path": "databuilder.contracts.wip.clinical_events",
      "docstring": [
        "TODO."
      ],
      "columns": [
        {
          "name": "code",
          "description": "",
          "type": "str",
          "constraints": []
        },
        {
          "name": "system",
          "description": "",
          "type": "str",
          "constraints": []
        },
        {
          "name": "date",
          "description": "",
          "type": "date",
          "constraints": []
        },
        {
          "name": "numeric_value",
          "description": "",
          "type": "float",
          "constraints": []
        }
      ],
      "contract_support": []
    },
    {
      "name": "covid_test_results",
      "hierarchy": [
        "wip"
      ],
      "dotted_path": "databuilder.contracts.wip.covid_test_results",
      "docstring": [
        "TODO."
      ],
      "columns": [
        {
          "name": "date",
          "description": "",
          "type": "date",
          "constraints": []
        },
        {
          "name": "positive_result",
          "description": "",
          "type": "bool",
          "constraints": []
        }
      ],
      "contract_support": []
    },
    {
      "name": "hospital_admissions",
      "hierarchy": [
        "wip"
      ],
      "dotted_path": "databuilder.contracts.wip.hospital_admissions",
      "docstring": [
        "TODO."
      ],
      "columns": [
        {
          "name": "admission_date",
          "description": "",
          "type": "date",
          "constraints": []
        },
        {
          "name": "primary_diagnosis",
          "description": "",
          "type": "str",
          "constraints": []
        },
        {
          "name": "admission_method",
          "description": "",
          "type": "int",
          "constraints": []
        },
        {
          "name": "episode_is_finished",
          "description": "",
          "type": "bool",
          "constraints": []
        },
        {
          "name": "spell_id",
          "description": "",
          "type": "int",
          "constraints": []
        }
      ],
      "contract_support": []
    },
    {
      "name": "hospitalisations",
      "hierarchy": [
        "wip"
      ],
      "dotted_path": "databuilder.contracts.wip.hospitalisations",
      "docstring": [
        "TODO."
      ],
      "columns": [
        {
          "name": "date",
          "description": "",
          "type": "date",
          "constraints": []
        },
        {
          "name": "code",
          "description": "",
          "type": "str",
          "constraints": []
        },
        {
          "name": "system",
          "description": "",
          "type": "str",
          "constraints": []
        }
      ],
      "contract_support": []
    },
    {
      "name": "hospitalisations_without_system",
      "hierarchy": [
        "wip"
      ],
      "dotted_path": "databuilder.contracts.wip.hospitalisations_without_system",
      "docstring": [
        "TODO."
      ],
      "columns": [
        {
          "name": "code",
          "description": "",
          "type": "str",
          "constraints": []
        }
      ],
      "contract_support": []
    },
    {
      "name": "patient_address",
      "hierarchy": [
        "wip"
      ],
      "dotted_path": "databuilder.contracts.wip.patient_address",
      "docstring": [
        "TODO."
      ],
      "columns": [
        {
          "name": "patientaddress_id",
          "description": "",
          "type": "int",
          "constraints": []
        },
        {
          "name": "date_start",
          "description": "",
          "type": "date",
          "constraints": []
        },
        {
          "name": "date_end",
          "description": "",
          "type": "date",
          "constraints": []
        },
        {
          "name": "index_of_multiple_deprivation_rounded",
          "description": "",
          "type": "int",
          "constraints": []
        },
        {
          "name": "has_postcode",
          "description": "",
          "type": "bool",
          "constraints": []
        }
      ],
      "contract_support": []
    },
    {
      "name": "patients",
      "hierarchy": [
        "wip"
      ],
      "dotted_path": "databuilder.contracts.wip.patients",
      "docstring": [
        "TODO."
      ],
      "columns": [
        {
          "name": "date_of_birth",
          "description": "",
          "type": "date",
          "constraints": []
        }
      ],
      "contract_support": []
    },
    {
      "name": "practice_registrations",
      "hierarchy": [
        "wip"
      ],
      "dotted_path": "databuilder.contracts.wip.practice_registrations",
      "docstring": [
        "TODO."
      ],
      "columns": [
        {
          "name": "pseudo_id",
          "description": "",
          "type": "int",
          "constraints": []
        },
        {
          "name": "nuts1_region_name",
          "description": "",
          "type": "str",
          "constraints": []
        },
        {
          "name": "date_start",
          "description": "",
          "type": "date",
          "constraints": []
        },
        {
          "name": "date_end",
          "description": "",
          "type": "date",
          "constraints": []
        }
      ],
      "contract_support": []
    },
    {
      "name": "prescriptions",
      "hierarchy": [
        "wip"
      ],
      "dotted_path": "databuilder.contracts.wip.prescriptions",
      "docstring": [
        "TODO."
      ],
      "columns": [
        {
          "name": "prescribed_dmd_code",
          "description": "",
          "type": "str",
          "constraints": []
        },
        {
          "name": "processing_date",
          "description": "",
          "type": "date",
          "constraints": []
        }
      ],
      "contract_support": []
    }
  ],
  "specs": [
    {
      "id": "1",
      "title": "Filtering an event frame",
      "sections": [
        {
          "id": "1.1",
          "title": "Including rows",
          "paragraphs": [
            {
              "id": "1.1.1",
              "title": "Take with column",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1",
                    "b1"
                  ],
                  [
                    "1",
                    "101",
                    "T"
                  ],
                  [
                    "1",
                    "102",
                    "T"
                  ],
                  [
                    "1",
                    "103",
                    ""
                  ],
                  [
                    "2",
                    "201",
                    "T"
                  ],
                  [
                    "2",
                    "202",
                    ""
                  ],
                  [
                    "2",
                    "203",
                    "F"
                  ],
                  [
                    "3",
                    "301",
                    ""
                  ],
                  [
                    "3",
                    "302",
                    "F"
                  ]
                ]
              },
              "series": "e.take(e.b1).i1.sum_for_patient()",
              "output": [
                [
                  "1",
                  "203"
                ],
                [
                  "2",
                  "201"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "1.1.2",
              "title": "Take with expr",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "111"
                  ],
                  [
                    "1",
                    "102",
                    "112"
                  ],
                  [
                    "1",
                    "103",
                    "113"
                  ],
                  [
                    "2",
                    "201",
                    "211"
                  ],
                  [
                    "2",
                    "202",
                    "212"
                  ],
                  [
                    "2",
                    "203",
                    "213"
                  ],
                  [
                    "3",
                    "301",
                    ""
                  ]
                ]
              },
              "series": "e.take((e.i1 + e.i2) < 413).i1.sum_for_patient()",
              "output": [
                [
                  "1",
                  "306"
                ],
                [
                  "2",
                  "201"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "1.1.3",
              "title": "Take with constant true",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ]
              },
              "series": "e.take(True).count_for_patient()",
              "output": [
                [
                  "1",
                  "2"
                ],
                [
                  "2",
                  "1"
                ]
              ]
            },
            {
              "id": "1.1.4",
              "title": "Take with constant false",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ]
              },
              "series": "e.take(False).count_for_patient()",
              "output": [
                [
                  "1",
                  "0"
                ],
                [
                  "2",
                  "0"
                ]
              ]
            },
            {
              "id": "1.1.5",
              "title": "Chain multiple takes",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1",
                    "b1"
                  ],
                  [
                    "1",
                    "1",
                    "T"
                  ],
                  [
                    "1",
                    "2",
                    "T"
                  ],
                  [
                    "1",
                    "3",
                    "F"
                  ]
                ]
              },
              "series": "e.take(e.i1 >= 2).take(e.b1).i1.sum_for_patient()",
              "output": [
                [
                  "1",
                  "2"
                ]
              ]
            }
          ]
        },
        {
          "id": "1.2",
          "title": "Excluding rows",
          "paragraphs": [
            {
              "id": "1.2.1",
              "title": "Drop with column",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1",
                    "b1"
                  ],
                  [
                    "1",
                    "101",
                    "T"
                  ],
                  [
                    "1",
                    "102",
                    "T"
                  ],
                  [
                    "1",
                    "103",
                    ""
                  ],
                  [
                    "2",
                    "201",
                    "T"
                  ],
                  [
                    "2",
                    "202",
                    ""
                  ],
                  [
                    "2",
                    "203",
                    "F"
                  ],
                  [
                    "3",
                    "301",
                    "T"
                  ],
                  [
                    "3",
                    "302",
                    "T"
                  ]
                ]
              },
              "series": "e.drop(e.b1).i1.sum_for_patient()",
              "output": [
                [
                  "1",
                  "103"
                ],
                [
                  "2",
                  "405"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "1.2.2",
              "title": "Drop with expr",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "111"
                  ],
                  [
                    "1",
                    "102",
                    "112"
                  ],
                  [
                    "1",
                    "103",
                    "113"
                  ],
                  [
                    "2",
                    "201",
                    "211"
                  ],
                  [
                    "2",
                    "202",
                    "212"
                  ],
                  [
                    "2",
                    "203",
                    "213"
                  ],
                  [
                    "3",
                    "301",
                    ""
                  ]
                ]
              },
              "series": "e.drop((e.i1 + e.i2) < 413).i1.sum_for_patient()",
              "output": [
                [
                  "1",
                  ""
                ],
                [
                  "2",
                  "405"
                ],
                [
                  "3",
                  "301"
                ]
              ]
            },
            {
              "id": "1.2.3",
              "title": "Drop with constant true",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ]
              },
              "series": "e.drop(True).count_for_patient()",
              "output": [
                [
                  "1",
                  "0"
                ],
                [
                  "2",
                  "0"
                ]
              ]
            },
            {
              "id": "1.2.4",
              "title": "Drop with constant false",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ]
              },
              "series": "e.drop(False).count_for_patient()",
              "output": [
                [
                  "1",
                  "2"
                ],
                [
                  "2",
                  "1"
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "2",
      "title": "Picking one row for each patient from an event frame",
      "sections": [
        {
          "id": "2.1",
          "title": "Picking the first or last row for each patient",
          "paragraphs": [
            {
              "id": "2.1.1",
              "title": "Sort by column pick first",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "1",
                    "103"
                  ],
                  [
                    "2",
                    "203"
                  ],
                  [
                    "2",
                    "202"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ]
              },
              "series": "e.sort_by(e.i1).first_for_patient().i1",
              "output": [
                [
                  "1",
                  "101"
                ],
                [
                  "2",
                  "201"
                ]
              ]
            },
            {
              "id": "2.1.2",
              "title": "Sort by column pick last",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "1",
                    "103"
                  ],
                  [
                    "2",
                    "203"
                  ],
                  [
                    "2",
                    "202"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ]
              },
              "series": "e.sort_by(e.i1).last_for_patient().i1",
              "output": [
                [
                  "1",
                  "103"
                ],
                [
                  "2",
                  "203"
                ]
              ]
            }
          ]
        },
        {
          "id": "2.2",
          "title": "Sort by more than one column and pick the first or last row for each patient",
          "paragraphs": [
            {
              "id": "2.2.1",
              "title": "Sort by multiple columns pick first",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "3"
                  ],
                  [
                    "1",
                    "102",
                    "2"
                  ],
                  [
                    "1",
                    "102",
                    "1"
                  ],
                  [
                    "2",
                    "203",
                    "1"
                  ],
                  [
                    "2",
                    "202",
                    "2"
                  ],
                  [
                    "2",
                    "202",
                    "3"
                  ]
                ]
              },
              "series": "e.sort_by(e.i1, e.i2).first_for_patient().i2",
              "output": [
                [
                  "1",
                  "3"
                ],
                [
                  "2",
                  "2"
                ]
              ]
            },
            {
              "id": "2.2.2",
              "title": "Sort by multiple columns pick last",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "3"
                  ],
                  [
                    "1",
                    "102",
                    "2"
                  ],
                  [
                    "1",
                    "102",
                    "1"
                  ],
                  [
                    "2",
                    "203",
                    "1"
                  ],
                  [
                    "2",
                    "202",
                    "2"
                  ],
                  [
                    "2",
                    "202",
                    "3"
                  ]
                ]
              },
              "series": "e.sort_by(e.i1, e.i2).last_for_patient().i2",
              "output": [
                [
                  "1",
                  "2"
                ],
                [
                  "2",
                  "1"
                ]
              ]
            }
          ]
        },
        {
          "id": "2.3",
          "title": "Picking the first or last row for each patient where a column contains NULLs",
          "paragraphs": [
            {
              "id": "2.3.1",
              "title": "Sort by column with nulls and pick first",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    ""
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "1",
                    "103"
                  ],
                  [
                    "2",
                    "203"
                  ],
                  [
                    "2",
                    "202"
                  ],
                  [
                    "2",
                    ""
                  ]
                ]
              },
              "series": "e.sort_by(e.i1).first_for_patient().i1",
              "output": [
                [
                  "1",
                  ""
                ],
                [
                  "2",
                  ""
                ]
              ]
            },
            {
              "id": "2.3.2",
              "title": "Sort by column with nulls and pick last",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    ""
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "1",
                    "103"
                  ],
                  [
                    "2",
                    "203"
                  ],
                  [
                    "2",
                    "202"
                  ],
                  [
                    "2",
                    ""
                  ]
                ]
              },
              "series": "e.sort_by(e.i1).last_for_patient().i1",
              "output": [
                [
                  "1",
                  "103"
                ],
                [
                  "2",
                  "203"
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "3",
      "title": "Aggregating event and patient frames",
      "sections": [
        {
          "id": "3.1",
          "title": "Determining whether a row exists for each patient",
          "paragraphs": [
            {
              "id": "3.1.1",
              "title": "Exists for patient on event frame",
              "tables": {
                "p": [
                  [
                    "patient",
                    "b1"
                  ],
                  [
                    "1",
                    ""
                  ],
                  [
                    "2",
                    ""
                  ],
                  [
                    "3",
                    ""
                  ]
                ],
                "e": [
                  [
                    "patient",
                    "b1"
                  ],
                  [
                    "1",
                    ""
                  ],
                  [
                    "1",
                    ""
                  ],
                  [
                    "2",
                    ""
                  ]
                ]
              },
              "series": "e.exists_for_patient()",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "F"
                ]
              ]
            },
            {
              "id": "3.1.2",
              "title": "Exists for patient on patient frame",
              "tables": {
                "p": [
                  [
                    "patient",
                    "b1"
                  ],
                  [
                    "1",
                    ""
                  ],
                  [
                    "2",
                    ""
                  ],
                  [
                    "3",
                    ""
                  ]
                ],
                "e": [
                  [
                    "patient",
                    "b1"
                  ],
                  [
                    "1",
                    ""
                  ],
                  [
                    "1",
                    ""
                  ],
                  [
                    "2",
                    ""
                  ]
                ]
              },
              "series": "p.exists_for_patient()",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "T"
                ]
              ]
            }
          ]
        },
        {
          "id": "3.2",
          "title": "Counting the rows for each patient",
          "paragraphs": [
            {
              "id": "3.2.1",
              "title": "Count for patient on event frame",
              "tables": {
                "p": [
                  [
                    "patient",
                    "b1"
                  ],
                  [
                    "1",
                    ""
                  ],
                  [
                    "2",
                    ""
                  ],
                  [
                    "3",
                    ""
                  ]
                ],
                "e": [
                  [
                    "patient",
                    "b1"
                  ],
                  [
                    "1",
                    ""
                  ],
                  [
                    "1",
                    ""
                  ],
                  [
                    "2",
                    ""
                  ]
                ]
              },
              "series": "e.count_for_patient()",
              "output": [
                [
                  "1",
                  "2"
                ],
                [
                  "2",
                  "1"
                ],
                [
                  "3",
                  "0"
                ]
              ]
            },
            {
              "id": "3.2.2",
              "title": "Count for patient on patient frame",
              "tables": {
                "p": [
                  [
                    "patient",
                    "b1"
                  ],
                  [
                    "1",
                    ""
                  ],
                  [
                    "2",
                    ""
                  ],
                  [
                    "3",
                    ""
                  ]
                ],
                "e": [
                  [
                    "patient",
                    "b1"
                  ],
                  [
                    "1",
                    ""
                  ],
                  [
                    "1",
                    ""
                  ],
                  [
                    "2",
                    ""
                  ]
                ]
              },
              "series": "p.count_for_patient()",
              "output": [
                [
                  "1",
                  "1"
                ],
                [
                  "2",
                  "1"
                ],
                [
                  "3",
                  "1"
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "4",
      "title": "Aggregating event series",
      "sections": [
        {
          "id": "4.1",
          "title": "Minimum and maximum aggregations",
          "paragraphs": [
            {
              "id": "4.1.1",
              "title": "Minimum for patient",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "1",
                    "103"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "2",
                    ""
                  ],
                  [
                    "3",
                    ""
                  ]
                ]
              },
              "series": "e.i1.minimum_for_patient()",
              "output": [
                [
                  "1",
                  "101"
                ],
                [
                  "2",
                  "201"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "4.1.2",
              "title": "Maximum for patient",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "1",
                    "103"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "2",
                    ""
                  ],
                  [
                    "3",
                    ""
                  ]
                ]
              },
              "series": "e.i1.maximum_for_patient()",
              "output": [
                [
                  "1",
                  "103"
                ],
                [
                  "2",
                  "201"
                ],
                [
                  "3",
                  ""
                ]
              ]
            }
          ]
        },
        {
          "id": "4.2",
          "title": "Sum aggregation",
          "paragraphs": [
            {
              "id": "4.2.1",
              "title": "Sum for patient",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "1",
                    "103"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "2",
                    ""
                  ],
                  [
                    "2",
                    "203"
                  ],
                  [
                    "3",
                    ""
                  ]
                ]
              },
              "series": "e.i1.sum_for_patient()",
              "output": [
                [
                  "1",
                  "306"
                ],
                [
                  "2",
                  "404"
                ],
                [
                  "3",
                  ""
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "5",
      "title": "Combining series",
      "sections": [
        {
          "id": "5.1",
          "title": "Combining two patient series",
          "paragraphs": [
            {
              "id": "5.1.1",
              "title": "Patient series and patient series",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "102"
                  ],
                  [
                    "2",
                    "201",
                    "202"
                  ]
                ]
              },
              "series": "p.i1 + p.i2",
              "output": [
                [
                  "1",
                  "203"
                ],
                [
                  "2",
                  "403"
                ]
              ]
            }
          ]
        },
        {
          "id": "5.2",
          "title": "Combining a patient series with a value",
          "paragraphs": [
            {
              "id": "5.2.1",
              "title": "Patient series and value",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ]
              },
              "series": "p.i1 + 1",
              "output": [
                [
                  "1",
                  "102"
                ],
                [
                  "2",
                  "202"
                ]
              ]
            },
            {
              "id": "5.2.2",
              "title": "Value and patient series",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ]
              },
              "series": "1 + p.i1",
              "output": [
                [
                  "1",
                  "102"
                ],
                [
                  "2",
                  "202"
                ]
              ]
            }
          ]
        },
        {
          "id": "5.3",
          "title": "Combining two event series",
          "paragraphs": [
            {
              "id": "5.3.1",
              "title": "Event series and event series",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1",
                    "i2",
                    "s1"
                  ],
                  [
                    "1",
                    "101",
                    "111",
                    "b"
                  ],
                  [
                    "1",
                    "102",
                    "112",
                    "a"
                  ],
                  [
                    "2",
                    "201",
                    "211",
                    "b"
                  ],
                  [
                    "2",
                    "202",
                    "212",
                    "a"
                  ]
                ]
              },
              "series": "(e.i1 + e.i2).sum_for_patient()",
              "output": [
                [
                  "1",
                  "426"
                ],
                [
                  "2",
                  "826"
                ]
              ]
            },
            {
              "id": "5.3.2",
              "title": "Event series and sorted event series",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1",
                    "i2",
                    "s1"
                  ],
                  [
                    "1",
                    "101",
                    "111",
                    "b"
                  ],
                  [
                    "1",
                    "102",
                    "112",
                    "a"
                  ],
                  [
                    "2",
                    "201",
                    "211",
                    "b"
                  ],
                  [
                    "2",
                    "202",
                    "212",
                    "a"
                  ]
                ]
              },
              "series": "(e.i1 + e.sort_by(e.s1).i2).minimum_for_patient()",
              "output": [
                [
                  "1",
                  "212"
                ],
                [
                  "2",
                  "412"
                ]
              ],
              "text": "The sort order of the underlying event series does not affect their combination."
            }
          ]
        },
        {
          "id": "5.4",
          "title": "Combining an event series with a patient series",
          "paragraphs": [
            {
              "id": "5.4.1",
              "title": "Event series and patient series",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ],
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "111"
                  ],
                  [
                    "1",
                    "112"
                  ],
                  [
                    "2",
                    "211"
                  ],
                  [
                    "2",
                    "212"
                  ]
                ]
              },
              "series": "(e.i1 + p.i1).sum_for_patient()",
              "output": [
                [
                  "1",
                  "425"
                ],
                [
                  "2",
                  "825"
                ]
              ]
            },
            {
              "id": "5.4.2",
              "title": "Patient series and event series",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ]
                ],
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "111"
                  ],
                  [
                    "1",
                    "112"
                  ],
                  [
                    "2",
                    "211"
                  ],
                  [
                    "2",
                    "212"
                  ]
                ]
              },
              "series": "(p.i1 + e.i1).sum_for_patient()",
              "output": [
                [
                  "1",
                  "425"
                ],
                [
                  "2",
                  "825"
                ]
              ]
            }
          ]
        },
        {
          "id": "5.5",
          "title": "Combining an event series with a value",
          "paragraphs": [
            {
              "id": "5.5.1",
              "title": "Event series and value",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "2",
                    "202"
                  ]
                ]
              },
              "series": "(e.i1 + 1).sum_for_patient()",
              "output": [
                [
                  "1",
                  "205"
                ],
                [
                  "2",
                  "405"
                ]
              ]
            },
            {
              "id": "5.5.2",
              "title": "Value and event series",
              "tables": {
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "2",
                    "202"
                  ]
                ]
              },
              "series": "(1 + e.i1).sum_for_patient()",
              "output": [
                [
                  "1",
                  "205"
                ],
                [
                  "2",
                  "405"
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "6",
      "title": "Operations on all series",
      "sections": [
        {
          "id": "6.1",
          "title": "Testing for equality",
          "paragraphs": [
            {
              "id": "6.1.1",
              "title": "Equals",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "101"
                  ],
                  [
                    "2",
                    "201",
                    "202"
                  ],
                  [
                    "3",
                    "301",
                    ""
                  ],
                  [
                    "4",
                    "",
                    ""
                  ]
                ]
              },
              "series": "p.i1 == p.i2",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  ""
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "6.1.2",
              "title": "Not equals",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "101"
                  ],
                  [
                    "2",
                    "201",
                    "202"
                  ],
                  [
                    "3",
                    "301",
                    ""
                  ],
                  [
                    "4",
                    "",
                    ""
                  ]
                ]
              },
              "series": "p.i1 != p.i2",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  ""
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "6.1.3",
              "title": "Is null",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "101"
                  ],
                  [
                    "2",
                    "201",
                    "202"
                  ],
                  [
                    "3",
                    "301",
                    ""
                  ],
                  [
                    "4",
                    "",
                    ""
                  ]
                ]
              },
              "series": "p.i1.is_null()",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  "T"
                ]
              ]
            },
            {
              "id": "6.1.4",
              "title": "Is not null",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "101"
                  ],
                  [
                    "2",
                    "201",
                    "202"
                  ],
                  [
                    "3",
                    "301",
                    ""
                  ],
                  [
                    "4",
                    "",
                    ""
                  ]
                ]
              },
              "series": "p.i1.is_not_null()",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  "F"
                ]
              ]
            }
          ]
        },
        {
          "id": "6.2",
          "title": "Testing for containment",
          "paragraphs": [
            {
              "id": "6.2.1",
              "title": "Is in",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "3",
                    "301"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.i1.is_in([101, 301])",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "6.2.2",
              "title": "Is not in",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "3",
                    "301"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.i1.is_not_in([101, 301])",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  ""
                ]
              ]
            }
          ]
        },
        {
          "id": "6.3",
          "title": "Map from one set of values to another",
          "paragraphs": [
            {
              "id": "6.3.1",
              "title": "Map values",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "3",
                    "301"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.i1.map_values({101: \"a\", 201: \"b\", 301: \"a\"})",
              "output": [
                [
                  "1",
                  "a"
                ],
                [
                  "2",
                  "b"
                ],
                [
                  "3",
                  "a"
                ],
                [
                  "4",
                  ""
                ]
              ]
            }
          ]
        },
        {
          "id": "6.4",
          "title": "Replace missing values",
          "paragraphs": [
            {
              "id": "6.4.1",
              "title": "If null then integer column",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "3",
                    "301"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.i1.if_null_then(0)",
              "output": [
                [
                  "1",
                  "101"
                ],
                [
                  "2",
                  "201"
                ],
                [
                  "3",
                  "301"
                ],
                [
                  "4",
                  "0"
                ]
              ]
            },
            {
              "id": "6.4.2",
              "title": "If null then boolean column",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "2",
                    "201"
                  ],
                  [
                    "3",
                    "301"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.i1.is_in([101, 201]).if_null_then(False)",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  "F"
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "7",
      "title": "Operations on boolean series",
      "sections": [
        {
          "id": "7.1",
          "title": "Logical operations",
          "paragraphs": [
            {
              "id": "7.1.1",
              "title": "Not",
              "tables": {
                "p": [
                  [
                    "patient",
                    "b1"
                  ],
                  [
                    "1",
                    "T"
                  ],
                  [
                    "2",
                    ""
                  ],
                  [
                    "3",
                    "F"
                  ]
                ]
              },
              "series": "~p.b1",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  ""
                ],
                [
                  "3",
                  "T"
                ]
              ]
            },
            {
              "id": "7.1.2",
              "title": "And",
              "tables": {
                "p": [
                  [
                    "patient",
                    "b1",
                    "b2"
                  ],
                  [
                    "1",
                    "T",
                    "T"
                  ],
                  [
                    "2",
                    "T",
                    ""
                  ],
                  [
                    "3",
                    "T",
                    "F"
                  ],
                  [
                    "4",
                    "",
                    "T"
                  ],
                  [
                    "5",
                    "",
                    ""
                  ],
                  [
                    "6",
                    "",
                    "F"
                  ],
                  [
                    "7",
                    "F",
                    "T"
                  ],
                  [
                    "8",
                    "F",
                    ""
                  ],
                  [
                    "9",
                    "F",
                    "F"
                  ]
                ]
              },
              "series": "p.b1 & p.b2",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  ""
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  ""
                ],
                [
                  "5",
                  ""
                ],
                [
                  "6",
                  "F"
                ],
                [
                  "7",
                  "F"
                ],
                [
                  "8",
                  "F"
                ],
                [
                  "9",
                  "F"
                ]
              ]
            },
            {
              "id": "7.1.3",
              "title": "Or",
              "tables": {
                "p": [
                  [
                    "patient",
                    "b1",
                    "b2"
                  ],
                  [
                    "1",
                    "T",
                    "T"
                  ],
                  [
                    "2",
                    "T",
                    ""
                  ],
                  [
                    "3",
                    "T",
                    "F"
                  ],
                  [
                    "4",
                    "",
                    "T"
                  ],
                  [
                    "5",
                    "",
                    ""
                  ],
                  [
                    "6",
                    "",
                    "F"
                  ],
                  [
                    "7",
                    "F",
                    "T"
                  ],
                  [
                    "8",
                    "F",
                    ""
                  ],
                  [
                    "9",
                    "F",
                    "F"
                  ]
                ]
              },
              "series": "p.b1 | p.b2",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  "T"
                ],
                [
                  "5",
                  ""
                ],
                [
                  "6",
                  ""
                ],
                [
                  "7",
                  "T"
                ],
                [
                  "8",
                  ""
                ],
                [
                  "9",
                  "F"
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "8",
      "title": "Operations on integer series",
      "sections": [
        {
          "id": "8.1",
          "title": "Arithmetic operations",
          "paragraphs": [
            {
              "id": "8.1.1",
              "title": "Negate",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "111"
                  ],
                  [
                    "2",
                    "201",
                    ""
                  ]
                ]
              },
              "series": "-p.i2",
              "output": [
                [
                  "1",
                  "-111"
                ],
                [
                  "2",
                  ""
                ]
              ]
            },
            {
              "id": "8.1.2",
              "title": "Add",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "111"
                  ],
                  [
                    "2",
                    "201",
                    ""
                  ]
                ]
              },
              "series": "p.i1 + p.i2",
              "output": [
                [
                  "1",
                  "212"
                ],
                [
                  "2",
                  ""
                ]
              ]
            },
            {
              "id": "8.1.3",
              "title": "Subtract",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "111"
                  ],
                  [
                    "2",
                    "201",
                    ""
                  ]
                ]
              },
              "series": "p.i1 - p.i2",
              "output": [
                [
                  "1",
                  "-10"
                ],
                [
                  "2",
                  ""
                ]
              ]
            },
            {
              "id": "8.1.4",
              "title": "Multiply",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "111"
                  ],
                  [
                    "2",
                    "201",
                    ""
                  ]
                ]
              },
              "series": "p.i1 * p.i2",
              "output": [
                [
                  "1",
                  "11211"
                ],
                [
                  "2",
                  ""
                ]
              ]
            },
            {
              "id": "8.1.5",
              "title": "Multiply with constant",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "111"
                  ],
                  [
                    "2",
                    "201",
                    ""
                  ]
                ]
              },
              "series": "10 * p.i2",
              "output": [
                [
                  "1",
                  "1110"
                ],
                [
                  "2",
                  ""
                ]
              ]
            }
          ]
        },
        {
          "id": "8.2",
          "title": "Comparison operations",
          "paragraphs": [
            {
              "id": "8.2.1",
              "title": "Less than",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "201"
                  ],
                  [
                    "2",
                    "201",
                    "201"
                  ],
                  [
                    "3",
                    "301",
                    "201"
                  ],
                  [
                    "4",
                    "",
                    "201"
                  ]
                ]
              },
              "series": "p.i1 < p.i2",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "8.2.2",
              "title": "Less than or equal to",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "201"
                  ],
                  [
                    "2",
                    "201",
                    "201"
                  ],
                  [
                    "3",
                    "301",
                    "201"
                  ],
                  [
                    "4",
                    "",
                    "201"
                  ]
                ]
              },
              "series": "p.i1 <= p.i2",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "8.2.3",
              "title": "Greater than",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "201"
                  ],
                  [
                    "2",
                    "201",
                    "201"
                  ],
                  [
                    "3",
                    "301",
                    "201"
                  ],
                  [
                    "4",
                    "",
                    "201"
                  ]
                ]
              },
              "series": "p.i1 > p.i2",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "8.2.4",
              "title": "Greater than or equal to",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "i2"
                  ],
                  [
                    "1",
                    "101",
                    "201"
                  ],
                  [
                    "2",
                    "201",
                    "201"
                  ],
                  [
                    "3",
                    "301",
                    "201"
                  ],
                  [
                    "4",
                    "",
                    "201"
                  ]
                ]
              },
              "series": "p.i1 >= p.i2",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  ""
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "9",
      "title": "Operations on all series containing codes",
      "sections": [
        {
          "id": "9.1",
          "title": "Testing for containment using codes",
          "paragraphs": [
            {
              "id": "9.1.1",
              "title": "Is in",
              "tables": {
                "p": [
                  [
                    "patient",
                    "c1"
                  ],
                  [
                    "1",
                    "abc"
                  ],
                  [
                    "2",
                    "def"
                  ],
                  [
                    "3",
                    "ghi"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.c1.is_in([SNOMEDCTCode(\"abc\"), SNOMEDCTCode(\"ghi\")])",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "9.1.2",
              "title": "Is not in",
              "tables": {
                "p": [
                  [
                    "patient",
                    "c1"
                  ],
                  [
                    "1",
                    "abc"
                  ],
                  [
                    "2",
                    "def"
                  ],
                  [
                    "3",
                    "ghi"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.c1.is_not_in([SNOMEDCTCode(\"abc\"), SNOMEDCTCode(\"ghi\")])",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "9.1.3",
              "title": "Is in codelist csv",
              "tables": {
                "p": [
                  [
                    "patient",
                    "c1"
                  ],
                  [
                    "1",
                    "abc"
                  ],
                  [
                    "2",
                    "def"
                  ],
                  [
                    "3",
                    "ghi"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.c1.is_in(codelist)",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  ""
                ]
              ]
            }
          ]
        },
        {
          "id": "9.2",
          "title": "Test mapping codes to categories using a categorised codelist",
          "paragraphs": [
            {
              "id": "9.2.1",
              "title": "Map codes to categories",
              "tables": {
                "p": [
                  [
                    "patient",
                    "c1"
                  ],
                  [
                    "1",
                    "abc"
                  ],
                  [
                    "2",
                    "def"
                  ],
                  [
                    "3",
                    "ghi"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.c1.to_category(codelist.my_categorisation)",
              "output": [
                [
                  "1",
                  "cat1"
                ],
                [
                  "2",
                  ""
                ],
                [
                  "3",
                  "cat2"
                ],
                [
                  "4",
                  ""
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "10",
      "title": "Logical case expressions",
      "sections": [
        {
          "id": "10.1",
          "title": "Logical case expressions",
          "paragraphs": [
            {
              "id": "10.1.1",
              "title": "Case with expression",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "6"
                  ],
                  [
                    "2",
                    "7"
                  ],
                  [
                    "3",
                    "8"
                  ],
                  [
                    "4",
                    "9"
                  ],
                  [
                    "5",
                    ""
                  ]
                ]
              },
              "series": "case(\n    when(p.i1 < 8).then(p.i1),\n    when(p.i1 > 8).then(100),\n)",
              "output": [
                [
                  "1",
                  "6"
                ],
                [
                  "2",
                  "7"
                ],
                [
                  "3",
                  ""
                ],
                [
                  "4",
                  "100"
                ],
                [
                  "5",
                  ""
                ]
              ]
            },
            {
              "id": "10.1.2",
              "title": "Case with default",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "6"
                  ],
                  [
                    "2",
                    "7"
                  ],
                  [
                    "3",
                    "8"
                  ],
                  [
                    "4",
                    "9"
                  ],
                  [
                    "5",
                    ""
                  ]
                ]
              },
              "series": "case(\n    when(p.i1 < 8).then(p.i1),\n    when(p.i1 > 8).then(100),\n    default=0,\n)",
              "output": [
                [
                  "1",
                  "6"
                ],
                [
                  "2",
                  "7"
                ],
                [
                  "3",
                  "0"
                ],
                [
                  "4",
                  "100"
                ],
                [
                  "5",
                  "0"
                ]
              ]
            },
            {
              "id": "10.1.3",
              "title": "Case with boolean column",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1",
                    "b1"
                  ],
                  [
                    "1",
                    "6",
                    "T"
                  ],
                  [
                    "2",
                    "7",
                    "F"
                  ],
                  [
                    "3",
                    "9",
                    "F"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "case(\n    when(p.b1).then(p.i1),\n    when(p.i1 > 8).then(100),\n)",
              "output": [
                [
                  "1",
                  "6"
                ],
                [
                  "2",
                  ""
                ],
                [
                  "3",
                  "100"
                ],
                [
                  "4",
                  ""
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "11",
      "title": "Operations on all series containing dates",
      "sections": [
        {
          "id": "11.1",
          "title": "Operations which apply to all series containing dates",
          "paragraphs": [
            {
              "id": "11.1.1",
              "title": "Get year",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "i1"
                  ],
                  [
                    "1",
                    "1990-01-02",
                    "100"
                  ],
                  [
                    "2",
                    "2000-03-04",
                    "200"
                  ],
                  [
                    "3",
                    "",
                    ""
                  ]
                ]
              },
              "series": "p.d1.year",
              "output": [
                [
                  "1",
                  "1990"
                ],
                [
                  "2",
                  "2000"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "11.1.2",
              "title": "Get month",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "i1"
                  ],
                  [
                    "1",
                    "1990-01-02",
                    "100"
                  ],
                  [
                    "2",
                    "2000-03-04",
                    "200"
                  ],
                  [
                    "3",
                    "",
                    ""
                  ]
                ]
              },
              "series": "p.d1.month",
              "output": [
                [
                  "1",
                  "1"
                ],
                [
                  "2",
                  "3"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "11.1.3",
              "title": "Get day",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "i1"
                  ],
                  [
                    "1",
                    "1990-01-02",
                    "100"
                  ],
                  [
                    "2",
                    "2000-03-04",
                    "200"
                  ],
                  [
                    "3",
                    "",
                    ""
                  ]
                ]
              },
              "series": "p.d1.day",
              "output": [
                [
                  "1",
                  "2"
                ],
                [
                  "2",
                  "4"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "11.1.4",
              "title": "To first of year",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "1990-01-01"
                  ],
                  [
                    "2",
                    "2000-12-15"
                  ],
                  [
                    "3",
                    "2020-12-31"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.d1.to_first_of_year()",
              "output": [
                [
                  "1",
                  "1990-01-01"
                ],
                [
                  "2",
                  "2000-01-01"
                ],
                [
                  "3",
                  "2020-01-01"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "11.1.5",
              "title": "To first of month",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "1990-01-01"
                  ],
                  [
                    "2",
                    "1990-01-31"
                  ],
                  [
                    "3",
                    ""
                  ]
                ]
              },
              "series": "p.d1.to_first_of_month()",
              "output": [
                [
                  "1",
                  "1990-01-01"
                ],
                [
                  "2",
                  "1990-01-01"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "11.1.6",
              "title": "Add days",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "i1"
                  ],
                  [
                    "1",
                    "1990-01-02",
                    "100"
                  ],
                  [
                    "2",
                    "2000-03-04",
                    "200"
                  ],
                  [
                    "3",
                    "",
                    ""
                  ]
                ]
              },
              "series": "p.d1 + days(p.i1)",
              "output": [
                [
                  "1",
                  "1990-04-12"
                ],
                [
                  "2",
                  "2000-09-20"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "11.1.7",
              "title": "Subtract days",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "i1"
                  ],
                  [
                    "1",
                    "1990-01-02",
                    "100"
                  ],
                  [
                    "2",
                    "2000-03-04",
                    "200"
                  ],
                  [
                    "3",
                    "",
                    ""
                  ]
                ]
              },
              "series": "p.d1 - days(p.i1)",
              "output": [
                [
                  "1",
                  "1989-09-24"
                ],
                [
                  "2",
                  "1999-08-17"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "11.1.8",
              "title": "Add months",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "i1"
                  ],
                  [
                    "1",
                    "2003-01-29",
                    "1"
                  ],
                  [
                    "2",
                    "2004-01-29",
                    "1"
                  ],
                  [
                    "3",
                    "2003-01-31",
                    "1"
                  ],
                  [
                    "4",
                    "2004-01-31",
                    "1"
                  ],
                  [
                    "5",
                    "2004-03-31",
                    "-1"
                  ],
                  [
                    "6",
                    "2000-10-31",
                    "11"
                  ],
                  [
                    "7",
                    "2000-10-31",
                    "-11"
                  ]
                ]
              },
              "series": "p.d1 + months(p.i1)",
              "output": [
                [
                  "1",
                  "2003-03-01"
                ],
                [
                  "2",
                  "2004-02-29"
                ],
                [
                  "3",
                  "2003-03-01"
                ],
                [
                  "4",
                  "2004-03-01"
                ],
                [
                  "5",
                  "2004-03-01"
                ],
                [
                  "6",
                  "2001-10-01"
                ],
                [
                  "7",
                  "1999-12-01"
                ]
              ]
            },
            {
              "id": "11.1.9",
              "title": "Add years",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "i1"
                  ],
                  [
                    "1",
                    "2000-06-15",
                    "5"
                  ],
                  [
                    "2",
                    "2000-06-15",
                    "-5"
                  ],
                  [
                    "3",
                    "2004-02-29",
                    "1"
                  ],
                  [
                    "4",
                    "2004-02-29",
                    "-1"
                  ],
                  [
                    "5",
                    "2004-02-29",
                    "4"
                  ],
                  [
                    "6",
                    "2004-02-29",
                    "-4"
                  ],
                  [
                    "7",
                    "2003-03-01",
                    "1"
                  ]
                ]
              },
              "series": "p.d1 + years(p.i1)",
              "output": [
                [
                  "1",
                  "2005-06-15"
                ],
                [
                  "2",
                  "1995-06-15"
                ],
                [
                  "3",
                  "2005-03-01"
                ],
                [
                  "4",
                  "2003-03-01"
                ],
                [
                  "5",
                  "2008-02-29"
                ],
                [
                  "6",
                  "2000-02-29"
                ],
                [
                  "7",
                  "2004-03-01"
                ]
              ]
            },
            {
              "id": "11.1.10",
              "title": "Add date to duration",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "i1"
                  ],
                  [
                    "1",
                    "1990-01-02",
                    "100"
                  ],
                  [
                    "2",
                    "2000-03-04",
                    "200"
                  ],
                  [
                    "3",
                    "",
                    ""
                  ]
                ]
              },
              "series": "days(100) + p.d1",
              "output": [
                [
                  "1",
                  "1990-04-12"
                ],
                [
                  "2",
                  "2000-06-12"
                ],
                [
                  "3",
                  ""
                ]
              ]
            },
            {
              "id": "11.1.11",
              "title": "Difference between dates in years",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "2020-02-29"
                  ],
                  [
                    "2",
                    "2020-02-28"
                  ],
                  [
                    "3",
                    "2019-01-01"
                  ],
                  [
                    "4",
                    "2021-03-01"
                  ],
                  [
                    "5",
                    "2023-01-01"
                  ],
                  [
                    "6",
                    ""
                  ]
                ]
              },
              "series": "(date(2021, 2, 28) - p.d1).years",
              "output": [
                [
                  "1",
                  "0"
                ],
                [
                  "2",
                  "1"
                ],
                [
                  "3",
                  "2"
                ],
                [
                  "4",
                  "-1"
                ],
                [
                  "5",
                  "-2"
                ],
                [
                  "6",
                  ""
                ]
              ]
            },
            {
              "id": "11.1.12",
              "title": "Difference between dates in months",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "d2"
                  ],
                  [
                    "1",
                    "2000-02-28",
                    "2000-01-30"
                  ],
                  [
                    "2",
                    "2000-03-01",
                    "2000-01-30"
                  ],
                  [
                    "3",
                    "2000-03-28",
                    "2000-02-28"
                  ],
                  [
                    "4",
                    "2000-03-30",
                    "2000-01-30"
                  ],
                  [
                    "5",
                    "2000-02-27",
                    "2000-01-30"
                  ],
                  [
                    "6",
                    "2000-01-27",
                    "2000-01-30"
                  ],
                  [
                    "7",
                    "1999-12-26",
                    "2000-01-27"
                  ],
                  [
                    "8",
                    "2005-02-28",
                    "2004-02-29"
                  ],
                  [
                    "9",
                    "2010-01-01",
                    "2000-01-01"
                  ],
                  [
                    "10",
                    "2000-01-01",
                    ""
                  ]
                ]
              },
              "series": "(p.d1 - p.d2).months",
              "output": [
                [
                  "1",
                  "0"
                ],
                [
                  "2",
                  "1"
                ],
                [
                  "3",
                  "1"
                ],
                [
                  "4",
                  "2"
                ],
                [
                  "5",
                  "0"
                ],
                [
                  "6",
                  "-1"
                ],
                [
                  "7",
                  "-2"
                ],
                [
                  "8",
                  "11"
                ],
                [
                  "9",
                  "120"
                ],
                [
                  "10",
                  ""
                ]
              ]
            },
            {
              "id": "11.1.13",
              "title": "Difference between dates in days",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "d2"
                  ],
                  [
                    "1",
                    "2000-01-01",
                    "2000-01-01"
                  ],
                  [
                    "2",
                    "2000-03-01",
                    "2000-01-01"
                  ],
                  [
                    "3",
                    "2001-03-01",
                    "2001-01-01"
                  ],
                  [
                    "4",
                    "1999-12-31",
                    "2001-01-01"
                  ]
                ]
              },
              "series": "(p.d1 - p.d2).days",
              "output": [
                [
                  "1",
                  "0"
                ],
                [
                  "2",
                  "60"
                ],
                [
                  "3",
                  "59"
                ],
                [
                  "4",
                  "-367"
                ]
              ]
            },
            {
              "id": "11.1.14",
              "title": "Reversed date differences",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "1990-01-30"
                  ],
                  [
                    "2",
                    "1970-01-15"
                  ]
                ]
              },
              "series": "(p.d1 - \"1980-01-20\").years",
              "output": [
                [
                  "1",
                  "10"
                ],
                [
                  "2",
                  "-11"
                ]
              ]
            },
            {
              "id": "11.1.15",
              "title": "Add days to static date",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "10"
                  ],
                  [
                    "2",
                    "-10"
                  ]
                ]
              },
              "series": "date(2000, 1, 1) + days(p.i1)",
              "output": [
                [
                  "1",
                  "2000-01-11"
                ],
                [
                  "2",
                  "1999-12-22"
                ]
              ]
            },
            {
              "id": "11.1.16",
              "title": "Add months to static date",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "10"
                  ],
                  [
                    "2",
                    "-10"
                  ]
                ]
              },
              "series": "date(2000, 1, 1) + months(p.i1)",
              "output": [
                [
                  "1",
                  "2000-11-01"
                ],
                [
                  "2",
                  "1999-03-01"
                ]
              ]
            },
            {
              "id": "11.1.17",
              "title": "Add years to static date",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "10"
                  ],
                  [
                    "2",
                    "-10"
                  ]
                ]
              },
              "series": "date(2000, 1, 1) + years(p.i1)",
              "output": [
                [
                  "1",
                  "2010-01-01"
                ],
                [
                  "2",
                  "1990-01-01"
                ]
              ]
            }
          ]
        },
        {
          "id": "11.2",
          "title": "Comparisons involving dates",
          "paragraphs": [
            {
              "id": "11.2.1",
              "title": "Is before",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "1990-01-01"
                  ],
                  [
                    "2",
                    "2000-01-01"
                  ],
                  [
                    "3",
                    "2010-01-01"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.d1.is_before(date(2000, 1, 1))",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "11.2.2",
              "title": "Is on or before",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "1990-01-01"
                  ],
                  [
                    "2",
                    "2000-01-01"
                  ],
                  [
                    "3",
                    "2010-01-01"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.d1.is_on_or_before(date(2000, 1, 1))",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "11.2.3",
              "title": "Is after",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "1990-01-01"
                  ],
                  [
                    "2",
                    "2000-01-01"
                  ],
                  [
                    "3",
                    "2010-01-01"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.d1.is_after(date(2000, 1, 1))",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "11.2.4",
              "title": "Is on or after",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "1990-01-01"
                  ],
                  [
                    "2",
                    "2000-01-01"
                  ],
                  [
                    "3",
                    "2010-01-01"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.d1.is_on_or_after(date(2000, 1, 1))",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "11.2.5",
              "title": "Is in",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "1990-01-01"
                  ],
                  [
                    "2",
                    "2000-01-01"
                  ],
                  [
                    "3",
                    "2010-01-01"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.d1.is_in([date(2010, 1, 1), date(1900, 1, 1)])",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "11.2.6",
              "title": "Is not in",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "1990-01-01"
                  ],
                  [
                    "2",
                    "2000-01-01"
                  ],
                  [
                    "3",
                    "2010-01-01"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.d1.is_not_in([date(2010, 1, 1), date(1900, 1, 1)])",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "11.2.7",
              "title": "Is between",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "2010-01-01"
                  ],
                  [
                    "2",
                    "2010-01-02"
                  ],
                  [
                    "3",
                    "2010-01-03"
                  ],
                  [
                    "4",
                    "2010-01-04"
                  ],
                  [
                    "5",
                    "2010-01-05"
                  ],
                  [
                    "6",
                    ""
                  ]
                ]
              },
              "series": "p.d1.is_between(date(2010, 1, 2), date(2010, 1, 4))",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  "F"
                ],
                [
                  "5",
                  "F"
                ],
                [
                  "6",
                  ""
                ]
              ]
            },
            {
              "id": "11.2.8",
              "title": "Is on or between",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "2010-01-01"
                  ],
                  [
                    "2",
                    "2010-01-02"
                  ],
                  [
                    "3",
                    "2010-01-03"
                  ],
                  [
                    "4",
                    "2010-01-04"
                  ],
                  [
                    "5",
                    "2010-01-05"
                  ],
                  [
                    "6",
                    ""
                  ]
                ]
              },
              "series": "p.d1.is_on_or_between(date(2010, 1, 2), date(2010, 1, 4))",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  "T"
                ],
                [
                  "5",
                  "F"
                ],
                [
                  "6",
                  ""
                ]
              ]
            },
            {
              "id": "11.2.9",
              "title": "Is between backwards",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "2010-01-01"
                  ],
                  [
                    "2",
                    "2010-01-02"
                  ],
                  [
                    "3",
                    "2010-01-03"
                  ],
                  [
                    "4",
                    "2010-01-04"
                  ],
                  [
                    "5",
                    "2010-01-05"
                  ],
                  [
                    "6",
                    ""
                  ]
                ]
              },
              "series": "p.d1.is_between(date(2010, 1, 4), date(2010, 1, 2))",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  "F"
                ],
                [
                  "5",
                  "F"
                ],
                [
                  "6",
                  ""
                ]
              ]
            },
            {
              "id": "11.2.10",
              "title": "Is on or between backwards",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1"
                  ],
                  [
                    "1",
                    "2010-01-01"
                  ],
                  [
                    "2",
                    "2010-01-02"
                  ],
                  [
                    "3",
                    "2010-01-03"
                  ],
                  [
                    "4",
                    "2010-01-04"
                  ],
                  [
                    "5",
                    "2010-01-05"
                  ],
                  [
                    "6",
                    ""
                  ]
                ]
              },
              "series": "p.d1.is_on_or_between(date(2010, 1, 4), date(2010, 1, 2))",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  "F"
                ],
                [
                  "5",
                  "F"
                ],
                [
                  "6",
                  ""
                ]
              ]
            }
          ]
        },
        {
          "id": "11.3",
          "title": "Types usable in comparisons involving dates",
          "paragraphs": [
            {
              "id": "11.3.1",
              "title": "Accepts python date object",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "d2"
                  ],
                  [
                    "1",
                    "1990-01-01",
                    "1980-01-01"
                  ],
                  [
                    "2",
                    "2000-01-01",
                    "1980-01-01"
                  ],
                  [
                    "3",
                    "2010-01-01",
                    "2020-01-01"
                  ],
                  [
                    "4",
                    "",
                    "2020-01-01"
                  ]
                ]
              },
              "series": "p.d1.is_before(datetime.date(2000, 1, 20))",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "11.3.2",
              "title": "Accepts iso formated date string",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "d2"
                  ],
                  [
                    "1",
                    "1990-01-01",
                    "1980-01-01"
                  ],
                  [
                    "2",
                    "2000-01-01",
                    "1980-01-01"
                  ],
                  [
                    "3",
                    "2010-01-01",
                    "2020-01-01"
                  ],
                  [
                    "4",
                    "",
                    "2020-01-01"
                  ]
                ]
              },
              "series": "p.d1.is_before(\"2000-01-20\")",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  ""
                ]
              ]
            },
            {
              "id": "11.3.3",
              "title": "Accepts another date series",
              "tables": {
                "p": [
                  [
                    "patient",
                    "d1",
                    "d2"
                  ],
                  [
                    "1",
                    "1990-01-01",
                    "1980-01-01"
                  ],
                  [
                    "2",
                    "2000-01-01",
                    "1980-01-01"
                  ],
                  [
                    "3",
                    "2010-01-01",
                    "2020-01-01"
                  ],
                  [
                    "4",
                    "",
                    "2020-01-01"
                  ]
                ]
              },
              "series": "p.d1.is_before(p.d2)",
              "output": [
                [
                  "1",
                  "F"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  ""
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "12",
      "title": "Operations on all series containing strings",
      "sections": [
        {
          "id": "12.1",
          "title": "Testing whether one string contains another string",
          "paragraphs": [
            {
              "id": "12.1.1",
              "title": "Contains fixed value",
              "tables": {
                "p": [
                  [
                    "patient",
                    "s1"
                  ],
                  [
                    "1",
                    "ab"
                  ],
                  [
                    "2",
                    "ab12"
                  ],
                  [
                    "3",
                    "12ab"
                  ],
                  [
                    "4",
                    "12ab45"
                  ],
                  [
                    "5",
                    "a b"
                  ],
                  [
                    "6",
                    "AB"
                  ],
                  [
                    "7",
                    ""
                  ]
                ]
              },
              "series": "p.s1.contains(\"ab\")",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  "T"
                ],
                [
                  "5",
                  "F"
                ],
                [
                  "6",
                  "F"
                ],
                [
                  "7",
                  ""
                ]
              ]
            },
            {
              "id": "12.1.2",
              "title": "Contains fixed value with special characters",
              "tables": {
                "p": [
                  [
                    "patient",
                    "s1"
                  ],
                  [
                    "1",
                    "/a%b_"
                  ],
                  [
                    "2",
                    "/ab_"
                  ],
                  [
                    "3",
                    "/a%bc"
                  ],
                  [
                    "4",
                    "a%b_"
                  ]
                ]
              },
              "series": "p.s1.contains(\"/a%b_\")",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  "F"
                ]
              ]
            },
            {
              "id": "12.1.3",
              "title": "Contains value from column",
              "tables": {
                "p": [
                  [
                    "patient",
                    "s1",
                    "s2"
                  ],
                  [
                    "1",
                    "ab",
                    "ab"
                  ],
                  [
                    "2",
                    "cd12",
                    "cd"
                  ],
                  [
                    "3",
                    "12ef",
                    "ef"
                  ],
                  [
                    "4",
                    "12gh45",
                    "gh"
                  ],
                  [
                    "5",
                    "i j",
                    "ij"
                  ],
                  [
                    "6",
                    "KL",
                    "kl"
                  ],
                  [
                    "7",
                    "",
                    "mn"
                  ],
                  [
                    "8",
                    "ab",
                    ""
                  ]
                ]
              },
              "series": "p.s1.contains(p.s2)",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "T"
                ],
                [
                  "3",
                  "T"
                ],
                [
                  "4",
                  "T"
                ],
                [
                  "5",
                  "F"
                ],
                [
                  "6",
                  "F"
                ],
                [
                  "7",
                  ""
                ],
                [
                  "8",
                  ""
                ]
              ]
            },
            {
              "id": "12.1.4",
              "title": "Contains value from column with special characters",
              "tables": {
                "p": [
                  [
                    "patient",
                    "s1",
                    "s2"
                  ],
                  [
                    "1",
                    "/a%b_",
                    "/a%b_"
                  ],
                  [
                    "2",
                    "/ab_",
                    "/a%b_"
                  ],
                  [
                    "3",
                    "/a%bc",
                    "/a%b_"
                  ],
                  [
                    "4",
                    "a%b_",
                    "/a%b_"
                  ]
                ]
              },
              "series": "p.s1.contains(p.s2)",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "F"
                ],
                [
                  "3",
                  "F"
                ],
                [
                  "4",
                  "F"
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "13",
      "title": "Defining the dataset population",
      "sections": [
        {
          "id": "13.1",
          "title": "Defining a population",
          "paragraphs": [
            {
              "id": "13.1.1",
              "title": "Population with single table",
              "tables": {
                "p": [
                  [
                    "patient",
                    "b1",
                    "i1"
                  ],
                  [
                    "1",
                    "F",
                    "10"
                  ],
                  [
                    "2",
                    "T",
                    "20"
                  ],
                  [
                    "3",
                    "F",
                    "30"
                  ]
                ]
              },
              "series": "p.i1\nset_population(~p.b1)",
              "output": [
                [
                  "1",
                  "10"
                ],
                [
                  "3",
                  "30"
                ]
              ],
              "text": "Extract a column from a patient table after limiting the population by another column."
            },
            {
              "id": "13.1.2",
              "title": "Population with multiple tables",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "10"
                  ],
                  [
                    "2",
                    "20"
                  ],
                  [
                    "3",
                    "0"
                  ]
                ],
                "e": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "101"
                  ],
                  [
                    "1",
                    "102"
                  ],
                  [
                    "3",
                    "301"
                  ],
                  [
                    "4",
                    "401"
                  ]
                ]
              },
              "series": "e.exists_for_patient()\nset_population(p.i1 > 0)",
              "output": [
                [
                  "1",
                  "T"
                ],
                [
                  "2",
                  "F"
                ]
              ],
              "text": "Limit the patient population by a column in one table, and return values from another\ntable."
            },
            {
              "id": "13.1.3",
              "title": "Case with case expression",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "6"
                  ],
                  [
                    "2",
                    "7"
                  ],
                  [
                    "3",
                    "9"
                  ],
                  [
                    "4",
                    ""
                  ]
                ]
              },
              "series": "p.i1\nset_population(\n    case(\n        when(p.i1 <= 8).then(True),\n        when(p.i1 > 8).then(False),\n    )\n)",
              "output": [
                [
                  "1",
                  "6"
                ],
                [
                  "2",
                  "7"
                ]
              ],
              "text": "Limit the patient population by a case expression."
            }
          ],
          "text": "\n`set_population` is used to limit the population from which data is extracted.\n"
        }
      ]
    },
    {
      "id": "14",
      "title": "Defining a table using inline data",
      "sections": [
        {
          "id": "14.1",
          "title": "Defining a table using inline data",
          "paragraphs": [
            {
              "id": "14.1.1",
              "title": "Table from rows",
              "tables": {
                "p": [
                  [
                    "patient",
                    "i1"
                  ],
                  [
                    "1",
                    "10"
                  ],
                  [
                    "2",
                    "20"
                  ],
                  [
                    "3",
                    "30"
                  ]
                ]
              },
              "series": "p.i1 + t.n",
              "output": [
                [
                  "1",
                  "110"
                ],
                [
                  "2",
                  ""
                ],
                [
                  "3",
                  "330"
                ]
              ]
            }
          ]
        }
      ]
    }
  ]
}
